/*
 * Copyright (C) 2019-2020 Lightbend Inc. <https://www.lightbend.com>
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StreamRefMessages.proto

package akka.stream;

public final class StreamRefMessages {
  private StreamRefMessages() {}
  public static void registerAllExtensions(
      akka.protobufv3.internal.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      akka.protobufv3.internal.ExtensionRegistry registry) {
    registerAllExtensions(
        (akka.protobufv3.internal.ExtensionRegistryLite) registry);
  }
  public interface SinkRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SinkRef)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return Whether the targetRef field is set.
     */
    boolean hasTargetRef();
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return The targetRef.
     */
    akka.stream.StreamRefMessages.ActorRef getTargetRef();
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     */
    akka.stream.StreamRefMessages.ActorRefOrBuilder getTargetRefOrBuilder();
  }
  /**
   * Protobuf type {@code SinkRef}
   */
  public  static final class SinkRef extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SinkRef)
      SinkRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SinkRef.newBuilder() to construct.
    private SinkRef(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SinkRef() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new SinkRef();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SinkRef(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              akka.stream.StreamRefMessages.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = targetRef_.toBuilder();
              }
              targetRef_ = input.readMessage(akka.stream.StreamRefMessages.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetRef_);
                targetRef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_SinkRef_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_SinkRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.SinkRef.class, akka.stream.StreamRefMessages.SinkRef.Builder.class);
    }

    private int bitField0_;
    public static final int TARGETREF_FIELD_NUMBER = 1;
    private akka.stream.StreamRefMessages.ActorRef targetRef_;
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return Whether the targetRef field is set.
     */
    public boolean hasTargetRef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return The targetRef.
     */
    public akka.stream.StreamRefMessages.ActorRef getTargetRef() {
      return targetRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
    }
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     */
    public akka.stream.StreamRefMessages.ActorRefOrBuilder getTargetRefOrBuilder() {
      return targetRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTargetRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTargetRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTargetRef());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeMessageSize(1, getTargetRef());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.SinkRef)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.SinkRef other = (akka.stream.StreamRefMessages.SinkRef) obj;

      if (hasTargetRef() != other.hasTargetRef()) return false;
      if (hasTargetRef()) {
        if (!getTargetRef()
            .equals(other.getTargetRef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTargetRef()) {
        hash = (37 * hash) + TARGETREF_FIELD_NUMBER;
        hash = (53 * hash) + getTargetRef().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SinkRef parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.SinkRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SinkRef}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SinkRef)
        akka.stream.StreamRefMessages.SinkRefOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_SinkRef_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_SinkRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.SinkRef.class, akka.stream.StreamRefMessages.SinkRef.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.SinkRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetRefFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (targetRefBuilder_ == null) {
          targetRef_ = null;
        } else {
          targetRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_SinkRef_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SinkRef getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.SinkRef.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SinkRef build() {
        akka.stream.StreamRefMessages.SinkRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SinkRef buildPartial() {
        akka.stream.StreamRefMessages.SinkRef result = new akka.stream.StreamRefMessages.SinkRef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (targetRefBuilder_ == null) {
            result.targetRef_ = targetRef_;
          } else {
            result.targetRef_ = targetRefBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.SinkRef) {
          return mergeFrom((akka.stream.StreamRefMessages.SinkRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.SinkRef other) {
        if (other == akka.stream.StreamRefMessages.SinkRef.getDefaultInstance()) return this;
        if (other.hasTargetRef()) {
          mergeTargetRef(other.getTargetRef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTargetRef()) {
          return false;
        }
        if (!getTargetRef().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.SinkRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.SinkRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private akka.stream.StreamRefMessages.ActorRef targetRef_;
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder> targetRefBuilder_;
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       * @return Whether the targetRef field is set.
       */
      public boolean hasTargetRef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       * @return The targetRef.
       */
      public akka.stream.StreamRefMessages.ActorRef getTargetRef() {
        if (targetRefBuilder_ == null) {
          return targetRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
        } else {
          return targetRefBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder setTargetRef(akka.stream.StreamRefMessages.ActorRef value) {
        if (targetRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetRef_ = value;
          onChanged();
        } else {
          targetRefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder setTargetRef(
          akka.stream.StreamRefMessages.ActorRef.Builder builderForValue) {
        if (targetRefBuilder_ == null) {
          targetRef_ = builderForValue.build();
          onChanged();
        } else {
          targetRefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder mergeTargetRef(akka.stream.StreamRefMessages.ActorRef value) {
        if (targetRefBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              targetRef_ != null &&
              targetRef_ != akka.stream.StreamRefMessages.ActorRef.getDefaultInstance()) {
            targetRef_ =
              akka.stream.StreamRefMessages.ActorRef.newBuilder(targetRef_).mergeFrom(value).buildPartial();
          } else {
            targetRef_ = value;
          }
          onChanged();
        } else {
          targetRefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder clearTargetRef() {
        if (targetRefBuilder_ == null) {
          targetRef_ = null;
          onChanged();
        } else {
          targetRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public akka.stream.StreamRefMessages.ActorRef.Builder getTargetRefBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTargetRefFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public akka.stream.StreamRefMessages.ActorRefOrBuilder getTargetRefOrBuilder() {
        if (targetRefBuilder_ != null) {
          return targetRefBuilder_.getMessageOrBuilder();
        } else {
          return targetRef_ == null ?
              akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
        }
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder> 
          getTargetRefFieldBuilder() {
        if (targetRefBuilder_ == null) {
          targetRefBuilder_ = new akka.protobufv3.internal.SingleFieldBuilderV3<
              akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder>(
                  getTargetRef(),
                  getParentForChildren(),
                  isClean());
          targetRef_ = null;
        }
        return targetRefBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SinkRef)
    }

    // @@protoc_insertion_point(class_scope:SinkRef)
    private static final akka.stream.StreamRefMessages.SinkRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.SinkRef();
    }

    public static akka.stream.StreamRefMessages.SinkRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<SinkRef>
        PARSER = new akka.protobufv3.internal.AbstractParser<SinkRef>() {
      @java.lang.Override
      public SinkRef parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new SinkRef(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<SinkRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<SinkRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.SinkRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SourceRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SourceRef)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required .ActorRef originRef = 1;</code>
     * @return Whether the originRef field is set.
     */
    boolean hasOriginRef();
    /**
     * <code>required .ActorRef originRef = 1;</code>
     * @return The originRef.
     */
    akka.stream.StreamRefMessages.ActorRef getOriginRef();
    /**
     * <code>required .ActorRef originRef = 1;</code>
     */
    akka.stream.StreamRefMessages.ActorRefOrBuilder getOriginRefOrBuilder();
  }
  /**
   * Protobuf type {@code SourceRef}
   */
  public  static final class SourceRef extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SourceRef)
      SourceRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SourceRef.newBuilder() to construct.
    private SourceRef(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SourceRef() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new SourceRef();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SourceRef(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              akka.stream.StreamRefMessages.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = originRef_.toBuilder();
              }
              originRef_ = input.readMessage(akka.stream.StreamRefMessages.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(originRef_);
                originRef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_SourceRef_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_SourceRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.SourceRef.class, akka.stream.StreamRefMessages.SourceRef.Builder.class);
    }

    private int bitField0_;
    public static final int ORIGINREF_FIELD_NUMBER = 1;
    private akka.stream.StreamRefMessages.ActorRef originRef_;
    /**
     * <code>required .ActorRef originRef = 1;</code>
     * @return Whether the originRef field is set.
     */
    public boolean hasOriginRef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .ActorRef originRef = 1;</code>
     * @return The originRef.
     */
    public akka.stream.StreamRefMessages.ActorRef getOriginRef() {
      return originRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : originRef_;
    }
    /**
     * <code>required .ActorRef originRef = 1;</code>
     */
    public akka.stream.StreamRefMessages.ActorRefOrBuilder getOriginRefOrBuilder() {
      return originRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : originRef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOriginRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOriginRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getOriginRef());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeMessageSize(1, getOriginRef());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.SourceRef)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.SourceRef other = (akka.stream.StreamRefMessages.SourceRef) obj;

      if (hasOriginRef() != other.hasOriginRef()) return false;
      if (hasOriginRef()) {
        if (!getOriginRef()
            .equals(other.getOriginRef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOriginRef()) {
        hash = (37 * hash) + ORIGINREF_FIELD_NUMBER;
        hash = (53 * hash) + getOriginRef().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SourceRef parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.SourceRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SourceRef}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SourceRef)
        akka.stream.StreamRefMessages.SourceRefOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_SourceRef_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_SourceRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.SourceRef.class, akka.stream.StreamRefMessages.SourceRef.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.SourceRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOriginRefFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (originRefBuilder_ == null) {
          originRef_ = null;
        } else {
          originRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_SourceRef_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SourceRef getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.SourceRef.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SourceRef build() {
        akka.stream.StreamRefMessages.SourceRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SourceRef buildPartial() {
        akka.stream.StreamRefMessages.SourceRef result = new akka.stream.StreamRefMessages.SourceRef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (originRefBuilder_ == null) {
            result.originRef_ = originRef_;
          } else {
            result.originRef_ = originRefBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.SourceRef) {
          return mergeFrom((akka.stream.StreamRefMessages.SourceRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.SourceRef other) {
        if (other == akka.stream.StreamRefMessages.SourceRef.getDefaultInstance()) return this;
        if (other.hasOriginRef()) {
          mergeOriginRef(other.getOriginRef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasOriginRef()) {
          return false;
        }
        if (!getOriginRef().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.SourceRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.SourceRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private akka.stream.StreamRefMessages.ActorRef originRef_;
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder> originRefBuilder_;
      /**
       * <code>required .ActorRef originRef = 1;</code>
       * @return Whether the originRef field is set.
       */
      public boolean hasOriginRef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       * @return The originRef.
       */
      public akka.stream.StreamRefMessages.ActorRef getOriginRef() {
        if (originRefBuilder_ == null) {
          return originRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : originRef_;
        } else {
          return originRefBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      public Builder setOriginRef(akka.stream.StreamRefMessages.ActorRef value) {
        if (originRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          originRef_ = value;
          onChanged();
        } else {
          originRefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      public Builder setOriginRef(
          akka.stream.StreamRefMessages.ActorRef.Builder builderForValue) {
        if (originRefBuilder_ == null) {
          originRef_ = builderForValue.build();
          onChanged();
        } else {
          originRefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      public Builder mergeOriginRef(akka.stream.StreamRefMessages.ActorRef value) {
        if (originRefBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              originRef_ != null &&
              originRef_ != akka.stream.StreamRefMessages.ActorRef.getDefaultInstance()) {
            originRef_ =
              akka.stream.StreamRefMessages.ActorRef.newBuilder(originRef_).mergeFrom(value).buildPartial();
          } else {
            originRef_ = value;
          }
          onChanged();
        } else {
          originRefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      public Builder clearOriginRef() {
        if (originRefBuilder_ == null) {
          originRef_ = null;
          onChanged();
        } else {
          originRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      public akka.stream.StreamRefMessages.ActorRef.Builder getOriginRefBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getOriginRefFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      public akka.stream.StreamRefMessages.ActorRefOrBuilder getOriginRefOrBuilder() {
        if (originRefBuilder_ != null) {
          return originRefBuilder_.getMessageOrBuilder();
        } else {
          return originRef_ == null ?
              akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : originRef_;
        }
      }
      /**
       * <code>required .ActorRef originRef = 1;</code>
       */
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder> 
          getOriginRefFieldBuilder() {
        if (originRefBuilder_ == null) {
          originRefBuilder_ = new akka.protobufv3.internal.SingleFieldBuilderV3<
              akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder>(
                  getOriginRef(),
                  getParentForChildren(),
                  isClean());
          originRef_ = null;
        }
        return originRefBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SourceRef)
    }

    // @@protoc_insertion_point(class_scope:SourceRef)
    private static final akka.stream.StreamRefMessages.SourceRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.SourceRef();
    }

    public static akka.stream.StreamRefMessages.SourceRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<SourceRef>
        PARSER = new akka.protobufv3.internal.AbstractParser<SourceRef>() {
      @java.lang.Override
      public SourceRef parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new SourceRef(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<SourceRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<SourceRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.SourceRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActorRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ActorRef)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required string path = 1;</code>
     * @return Whether the path field is set.
     */
    boolean hasPath();
    /**
     * <code>required string path = 1;</code>
     * @return The path.
     */
    java.lang.String getPath();
    /**
     * <code>required string path = 1;</code>
     * @return The bytes for path.
     */
    akka.protobufv3.internal.ByteString
        getPathBytes();
  }
  /**
   * Protobuf type {@code ActorRef}
   */
  public  static final class ActorRef extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ActorRef)
      ActorRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ActorRef.newBuilder() to construct.
    private ActorRef(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ActorRef() {
      path_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new ActorRef();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ActorRef(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              akka.protobufv3.internal.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              path_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_ActorRef_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_ActorRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.ActorRef.class, akka.stream.StreamRefMessages.ActorRef.Builder.class);
    }

    private int bitField0_;
    public static final int PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object path_;
    /**
     * <code>required string path = 1;</code>
     * @return Whether the path field is set.
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string path = 1;</code>
     * @return The path.
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobufv3.internal.ByteString bs = 
            (akka.protobufv3.internal.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string path = 1;</code>
     * @return The bytes for path.
     */
    public akka.protobufv3.internal.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        akka.protobufv3.internal.ByteString b = 
            akka.protobufv3.internal.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (akka.protobufv3.internal.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPath()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        akka.protobufv3.internal.GeneratedMessageV3.writeString(output, 1, path_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.GeneratedMessageV3.computeStringSize(1, path_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.ActorRef)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.ActorRef other = (akka.stream.StreamRefMessages.ActorRef) obj;

      if (hasPath() != other.hasPath()) return false;
      if (hasPath()) {
        if (!getPath()
            .equals(other.getPath())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.ActorRef parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.ActorRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ActorRef}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ActorRef)
        akka.stream.StreamRefMessages.ActorRefOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_ActorRef_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_ActorRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.ActorRef.class, akka.stream.StreamRefMessages.ActorRef.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.ActorRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_ActorRef_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.ActorRef getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.ActorRef.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.ActorRef build() {
        akka.stream.StreamRefMessages.ActorRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.ActorRef buildPartial() {
        akka.stream.StreamRefMessages.ActorRef result = new akka.stream.StreamRefMessages.ActorRef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.path_ = path_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.ActorRef) {
          return mergeFrom((akka.stream.StreamRefMessages.ActorRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.ActorRef other) {
        if (other == akka.stream.StreamRefMessages.ActorRef.getDefaultInstance()) return this;
        if (other.hasPath()) {
          bitField0_ |= 0x00000001;
          path_ = other.path_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPath()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.ActorRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.ActorRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object path_ = "";
      /**
       * <code>required string path = 1;</code>
       * @return Whether the path field is set.
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string path = 1;</code>
       * @return The path.
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobufv3.internal.ByteString bs =
              (akka.protobufv3.internal.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string path = 1;</code>
       * @return The bytes for path.
       */
      public akka.protobufv3.internal.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          akka.protobufv3.internal.ByteString b = 
              akka.protobufv3.internal.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (akka.protobufv3.internal.ByteString) ref;
        }
      }
      /**
       * <code>required string path = 1;</code>
       * @param value The path to set.
       * @return This builder for chaining.
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string path = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>required string path = 1;</code>
       * @param value The bytes for path to set.
       * @return This builder for chaining.
       */
      public Builder setPathBytes(
          akka.protobufv3.internal.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ActorRef)
    }

    // @@protoc_insertion_point(class_scope:ActorRef)
    private static final akka.stream.StreamRefMessages.ActorRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.ActorRef();
    }

    public static akka.stream.StreamRefMessages.ActorRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<ActorRef>
        PARSER = new akka.protobufv3.internal.AbstractParser<ActorRef>() {
      @java.lang.Override
      public ActorRef parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new ActorRef(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<ActorRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<ActorRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.ActorRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Payload)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required bytes enclosedMessage = 1;</code>
     * @return Whether the enclosedMessage field is set.
     */
    boolean hasEnclosedMessage();
    /**
     * <code>required bytes enclosedMessage = 1;</code>
     * @return The enclosedMessage.
     */
    akka.protobufv3.internal.ByteString getEnclosedMessage();

    /**
     * <code>required int32 serializerId = 2;</code>
     * @return Whether the serializerId field is set.
     */
    boolean hasSerializerId();
    /**
     * <code>required int32 serializerId = 2;</code>
     * @return The serializerId.
     */
    int getSerializerId();

    /**
     * <code>optional bytes messageManifest = 3;</code>
     * @return Whether the messageManifest field is set.
     */
    boolean hasMessageManifest();
    /**
     * <code>optional bytes messageManifest = 3;</code>
     * @return The messageManifest.
     */
    akka.protobufv3.internal.ByteString getMessageManifest();
  }
  /**
   * Protobuf type {@code Payload}
   */
  public  static final class Payload extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Payload)
      PayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Payload.newBuilder() to construct.
    private Payload(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Payload() {
      enclosedMessage_ = akka.protobufv3.internal.ByteString.EMPTY;
      messageManifest_ = akka.protobufv3.internal.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new Payload();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Payload(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              enclosedMessage_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serializerId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              messageManifest_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_Payload_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_Payload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.Payload.class, akka.stream.StreamRefMessages.Payload.Builder.class);
    }

    private int bitField0_;
    public static final int ENCLOSEDMESSAGE_FIELD_NUMBER = 1;
    private akka.protobufv3.internal.ByteString enclosedMessage_;
    /**
     * <code>required bytes enclosedMessage = 1;</code>
     * @return Whether the enclosedMessage field is set.
     */
    public boolean hasEnclosedMessage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required bytes enclosedMessage = 1;</code>
     * @return The enclosedMessage.
     */
    public akka.protobufv3.internal.ByteString getEnclosedMessage() {
      return enclosedMessage_;
    }

    public static final int SERIALIZERID_FIELD_NUMBER = 2;
    private int serializerId_;
    /**
     * <code>required int32 serializerId = 2;</code>
     * @return Whether the serializerId field is set.
     */
    public boolean hasSerializerId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 serializerId = 2;</code>
     * @return The serializerId.
     */
    public int getSerializerId() {
      return serializerId_;
    }

    public static final int MESSAGEMANIFEST_FIELD_NUMBER = 3;
    private akka.protobufv3.internal.ByteString messageManifest_;
    /**
     * <code>optional bytes messageManifest = 3;</code>
     * @return Whether the messageManifest field is set.
     */
    public boolean hasMessageManifest() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bytes messageManifest = 3;</code>
     * @return The messageManifest.
     */
    public akka.protobufv3.internal.ByteString getMessageManifest() {
      return messageManifest_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEnclosedMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSerializerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, enclosedMessage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, serializerId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, messageManifest_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeBytesSize(1, enclosedMessage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeInt32Size(2, serializerId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeBytesSize(3, messageManifest_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.Payload)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.Payload other = (akka.stream.StreamRefMessages.Payload) obj;

      if (hasEnclosedMessage() != other.hasEnclosedMessage()) return false;
      if (hasEnclosedMessage()) {
        if (!getEnclosedMessage()
            .equals(other.getEnclosedMessage())) return false;
      }
      if (hasSerializerId() != other.hasSerializerId()) return false;
      if (hasSerializerId()) {
        if (getSerializerId()
            != other.getSerializerId()) return false;
      }
      if (hasMessageManifest() != other.hasMessageManifest()) return false;
      if (hasMessageManifest()) {
        if (!getMessageManifest()
            .equals(other.getMessageManifest())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEnclosedMessage()) {
        hash = (37 * hash) + ENCLOSEDMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getEnclosedMessage().hashCode();
      }
      if (hasSerializerId()) {
        hash = (37 * hash) + SERIALIZERID_FIELD_NUMBER;
        hash = (53 * hash) + getSerializerId();
      }
      if (hasMessageManifest()) {
        hash = (37 * hash) + MESSAGEMANIFEST_FIELD_NUMBER;
        hash = (53 * hash) + getMessageManifest().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.Payload parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.Payload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.Payload parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.Payload parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.Payload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Payload}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Payload)
        akka.stream.StreamRefMessages.PayloadOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_Payload_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_Payload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.Payload.class, akka.stream.StreamRefMessages.Payload.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.Payload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        enclosedMessage_ = akka.protobufv3.internal.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        serializerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        messageManifest_ = akka.protobufv3.internal.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_Payload_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.Payload getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.Payload.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.Payload build() {
        akka.stream.StreamRefMessages.Payload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.Payload buildPartial() {
        akka.stream.StreamRefMessages.Payload result = new akka.stream.StreamRefMessages.Payload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enclosedMessage_ = enclosedMessage_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.serializerId_ = serializerId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageManifest_ = messageManifest_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.Payload) {
          return mergeFrom((akka.stream.StreamRefMessages.Payload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.Payload other) {
        if (other == akka.stream.StreamRefMessages.Payload.getDefaultInstance()) return this;
        if (other.hasEnclosedMessage()) {
          setEnclosedMessage(other.getEnclosedMessage());
        }
        if (other.hasSerializerId()) {
          setSerializerId(other.getSerializerId());
        }
        if (other.hasMessageManifest()) {
          setMessageManifest(other.getMessageManifest());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasEnclosedMessage()) {
          return false;
        }
        if (!hasSerializerId()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.Payload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.Payload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private akka.protobufv3.internal.ByteString enclosedMessage_ = akka.protobufv3.internal.ByteString.EMPTY;
      /**
       * <code>required bytes enclosedMessage = 1;</code>
       * @return Whether the enclosedMessage field is set.
       */
      public boolean hasEnclosedMessage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bytes enclosedMessage = 1;</code>
       * @return The enclosedMessage.
       */
      public akka.protobufv3.internal.ByteString getEnclosedMessage() {
        return enclosedMessage_;
      }
      /**
       * <code>required bytes enclosedMessage = 1;</code>
       * @param value The enclosedMessage to set.
       * @return This builder for chaining.
       */
      public Builder setEnclosedMessage(akka.protobufv3.internal.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        enclosedMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes enclosedMessage = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnclosedMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enclosedMessage_ = getDefaultInstance().getEnclosedMessage();
        onChanged();
        return this;
      }

      private int serializerId_ ;
      /**
       * <code>required int32 serializerId = 2;</code>
       * @return Whether the serializerId field is set.
       */
      public boolean hasSerializerId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 serializerId = 2;</code>
       * @return The serializerId.
       */
      public int getSerializerId() {
        return serializerId_;
      }
      /**
       * <code>required int32 serializerId = 2;</code>
       * @param value The serializerId to set.
       * @return This builder for chaining.
       */
      public Builder setSerializerId(int value) {
        bitField0_ |= 0x00000002;
        serializerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serializerId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerializerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serializerId_ = 0;
        onChanged();
        return this;
      }

      private akka.protobufv3.internal.ByteString messageManifest_ = akka.protobufv3.internal.ByteString.EMPTY;
      /**
       * <code>optional bytes messageManifest = 3;</code>
       * @return Whether the messageManifest field is set.
       */
      public boolean hasMessageManifest() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bytes messageManifest = 3;</code>
       * @return The messageManifest.
       */
      public akka.protobufv3.internal.ByteString getMessageManifest() {
        return messageManifest_;
      }
      /**
       * <code>optional bytes messageManifest = 3;</code>
       * @param value The messageManifest to set.
       * @return This builder for chaining.
       */
      public Builder setMessageManifest(akka.protobufv3.internal.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageManifest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes messageManifest = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageManifest() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageManifest_ = getDefaultInstance().getMessageManifest();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Payload)
    }

    // @@protoc_insertion_point(class_scope:Payload)
    private static final akka.stream.StreamRefMessages.Payload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.Payload();
    }

    public static akka.stream.StreamRefMessages.Payload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<Payload>
        PARSER = new akka.protobufv3.internal.AbstractParser<Payload>() {
      @java.lang.Override
      public Payload parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new Payload(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<Payload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<Payload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.Payload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OnSubscribeHandshakeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OnSubscribeHandshake)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return Whether the targetRef field is set.
     */
    boolean hasTargetRef();
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return The targetRef.
     */
    akka.stream.StreamRefMessages.ActorRef getTargetRef();
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     */
    akka.stream.StreamRefMessages.ActorRefOrBuilder getTargetRefOrBuilder();
  }
  /**
   * Protobuf type {@code OnSubscribeHandshake}
   */
  public  static final class OnSubscribeHandshake extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OnSubscribeHandshake)
      OnSubscribeHandshakeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OnSubscribeHandshake.newBuilder() to construct.
    private OnSubscribeHandshake(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OnSubscribeHandshake() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new OnSubscribeHandshake();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OnSubscribeHandshake(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              akka.stream.StreamRefMessages.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = targetRef_.toBuilder();
              }
              targetRef_ = input.readMessage(akka.stream.StreamRefMessages.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetRef_);
                targetRef_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_OnSubscribeHandshake_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_OnSubscribeHandshake_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.OnSubscribeHandshake.class, akka.stream.StreamRefMessages.OnSubscribeHandshake.Builder.class);
    }

    private int bitField0_;
    public static final int TARGETREF_FIELD_NUMBER = 1;
    private akka.stream.StreamRefMessages.ActorRef targetRef_;
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return Whether the targetRef field is set.
     */
    public boolean hasTargetRef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     * @return The targetRef.
     */
    public akka.stream.StreamRefMessages.ActorRef getTargetRef() {
      return targetRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
    }
    /**
     * <code>required .ActorRef targetRef = 1;</code>
     */
    public akka.stream.StreamRefMessages.ActorRefOrBuilder getTargetRefOrBuilder() {
      return targetRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTargetRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTargetRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTargetRef());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeMessageSize(1, getTargetRef());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.OnSubscribeHandshake)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.OnSubscribeHandshake other = (akka.stream.StreamRefMessages.OnSubscribeHandshake) obj;

      if (hasTargetRef() != other.hasTargetRef()) return false;
      if (hasTargetRef()) {
        if (!getTargetRef()
            .equals(other.getTargetRef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTargetRef()) {
        hash = (37 * hash) + TARGETREF_FIELD_NUMBER;
        hash = (53 * hash) + getTargetRef().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.OnSubscribeHandshake parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.OnSubscribeHandshake prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OnSubscribeHandshake}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OnSubscribeHandshake)
        akka.stream.StreamRefMessages.OnSubscribeHandshakeOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_OnSubscribeHandshake_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_OnSubscribeHandshake_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.OnSubscribeHandshake.class, akka.stream.StreamRefMessages.OnSubscribeHandshake.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.OnSubscribeHandshake.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetRefFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (targetRefBuilder_ == null) {
          targetRef_ = null;
        } else {
          targetRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_OnSubscribeHandshake_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.OnSubscribeHandshake getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.OnSubscribeHandshake.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.OnSubscribeHandshake build() {
        akka.stream.StreamRefMessages.OnSubscribeHandshake result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.OnSubscribeHandshake buildPartial() {
        akka.stream.StreamRefMessages.OnSubscribeHandshake result = new akka.stream.StreamRefMessages.OnSubscribeHandshake(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (targetRefBuilder_ == null) {
            result.targetRef_ = targetRef_;
          } else {
            result.targetRef_ = targetRefBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.OnSubscribeHandshake) {
          return mergeFrom((akka.stream.StreamRefMessages.OnSubscribeHandshake)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.OnSubscribeHandshake other) {
        if (other == akka.stream.StreamRefMessages.OnSubscribeHandshake.getDefaultInstance()) return this;
        if (other.hasTargetRef()) {
          mergeTargetRef(other.getTargetRef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTargetRef()) {
          return false;
        }
        if (!getTargetRef().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.OnSubscribeHandshake parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.OnSubscribeHandshake) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private akka.stream.StreamRefMessages.ActorRef targetRef_;
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder> targetRefBuilder_;
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       * @return Whether the targetRef field is set.
       */
      public boolean hasTargetRef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       * @return The targetRef.
       */
      public akka.stream.StreamRefMessages.ActorRef getTargetRef() {
        if (targetRefBuilder_ == null) {
          return targetRef_ == null ? akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
        } else {
          return targetRefBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder setTargetRef(akka.stream.StreamRefMessages.ActorRef value) {
        if (targetRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetRef_ = value;
          onChanged();
        } else {
          targetRefBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder setTargetRef(
          akka.stream.StreamRefMessages.ActorRef.Builder builderForValue) {
        if (targetRefBuilder_ == null) {
          targetRef_ = builderForValue.build();
          onChanged();
        } else {
          targetRefBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder mergeTargetRef(akka.stream.StreamRefMessages.ActorRef value) {
        if (targetRefBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              targetRef_ != null &&
              targetRef_ != akka.stream.StreamRefMessages.ActorRef.getDefaultInstance()) {
            targetRef_ =
              akka.stream.StreamRefMessages.ActorRef.newBuilder(targetRef_).mergeFrom(value).buildPartial();
          } else {
            targetRef_ = value;
          }
          onChanged();
        } else {
          targetRefBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public Builder clearTargetRef() {
        if (targetRefBuilder_ == null) {
          targetRef_ = null;
          onChanged();
        } else {
          targetRefBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public akka.stream.StreamRefMessages.ActorRef.Builder getTargetRefBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTargetRefFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      public akka.stream.StreamRefMessages.ActorRefOrBuilder getTargetRefOrBuilder() {
        if (targetRefBuilder_ != null) {
          return targetRefBuilder_.getMessageOrBuilder();
        } else {
          return targetRef_ == null ?
              akka.stream.StreamRefMessages.ActorRef.getDefaultInstance() : targetRef_;
        }
      }
      /**
       * <code>required .ActorRef targetRef = 1;</code>
       */
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder> 
          getTargetRefFieldBuilder() {
        if (targetRefBuilder_ == null) {
          targetRefBuilder_ = new akka.protobufv3.internal.SingleFieldBuilderV3<
              akka.stream.StreamRefMessages.ActorRef, akka.stream.StreamRefMessages.ActorRef.Builder, akka.stream.StreamRefMessages.ActorRefOrBuilder>(
                  getTargetRef(),
                  getParentForChildren(),
                  isClean());
          targetRef_ = null;
        }
        return targetRefBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:OnSubscribeHandshake)
    }

    // @@protoc_insertion_point(class_scope:OnSubscribeHandshake)
    private static final akka.stream.StreamRefMessages.OnSubscribeHandshake DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.OnSubscribeHandshake();
    }

    public static akka.stream.StreamRefMessages.OnSubscribeHandshake getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<OnSubscribeHandshake>
        PARSER = new akka.protobufv3.internal.AbstractParser<OnSubscribeHandshake>() {
      @java.lang.Override
      public OnSubscribeHandshake parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new OnSubscribeHandshake(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<OnSubscribeHandshake> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<OnSubscribeHandshake> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.OnSubscribeHandshake getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CumulativeDemandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CumulativeDemand)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required int64 seqNr = 1;</code>
     * @return Whether the seqNr field is set.
     */
    boolean hasSeqNr();
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return The seqNr.
     */
    long getSeqNr();
  }
  /**
   * Protobuf type {@code CumulativeDemand}
   */
  public  static final class CumulativeDemand extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CumulativeDemand)
      CumulativeDemandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CumulativeDemand.newBuilder() to construct.
    private CumulativeDemand(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CumulativeDemand() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new CumulativeDemand();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CumulativeDemand(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              seqNr_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_CumulativeDemand_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_CumulativeDemand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.CumulativeDemand.class, akka.stream.StreamRefMessages.CumulativeDemand.Builder.class);
    }

    private int bitField0_;
    public static final int SEQNR_FIELD_NUMBER = 1;
    private long seqNr_;
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return Whether the seqNr field is set.
     */
    public boolean hasSeqNr() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return The seqNr.
     */
    public long getSeqNr() {
      return seqNr_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeqNr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, seqNr_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeInt64Size(1, seqNr_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.CumulativeDemand)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.CumulativeDemand other = (akka.stream.StreamRefMessages.CumulativeDemand) obj;

      if (hasSeqNr() != other.hasSeqNr()) return false;
      if (hasSeqNr()) {
        if (getSeqNr()
            != other.getSeqNr()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeqNr()) {
        hash = (37 * hash) + SEQNR_FIELD_NUMBER;
        hash = (53 * hash) + akka.protobufv3.internal.Internal.hashLong(
            getSeqNr());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.CumulativeDemand parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.CumulativeDemand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CumulativeDemand}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CumulativeDemand)
        akka.stream.StreamRefMessages.CumulativeDemandOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_CumulativeDemand_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_CumulativeDemand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.CumulativeDemand.class, akka.stream.StreamRefMessages.CumulativeDemand.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.CumulativeDemand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqNr_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_CumulativeDemand_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.CumulativeDemand getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.CumulativeDemand.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.CumulativeDemand build() {
        akka.stream.StreamRefMessages.CumulativeDemand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.CumulativeDemand buildPartial() {
        akka.stream.StreamRefMessages.CumulativeDemand result = new akka.stream.StreamRefMessages.CumulativeDemand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.seqNr_ = seqNr_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.CumulativeDemand) {
          return mergeFrom((akka.stream.StreamRefMessages.CumulativeDemand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.CumulativeDemand other) {
        if (other == akka.stream.StreamRefMessages.CumulativeDemand.getDefaultInstance()) return this;
        if (other.hasSeqNr()) {
          setSeqNr(other.getSeqNr());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSeqNr()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.CumulativeDemand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.CumulativeDemand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long seqNr_ ;
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return Whether the seqNr field is set.
       */
      public boolean hasSeqNr() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return The seqNr.
       */
      public long getSeqNr() {
        return seqNr_;
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @param value The seqNr to set.
       * @return This builder for chaining.
       */
      public Builder setSeqNr(long value) {
        bitField0_ |= 0x00000001;
        seqNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeqNr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seqNr_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CumulativeDemand)
    }

    // @@protoc_insertion_point(class_scope:CumulativeDemand)
    private static final akka.stream.StreamRefMessages.CumulativeDemand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.CumulativeDemand();
    }

    public static akka.stream.StreamRefMessages.CumulativeDemand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<CumulativeDemand>
        PARSER = new akka.protobufv3.internal.AbstractParser<CumulativeDemand>() {
      @java.lang.Override
      public CumulativeDemand parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new CumulativeDemand(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<CumulativeDemand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<CumulativeDemand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.CumulativeDemand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SequencedOnNextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SequencedOnNext)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required int64 seqNr = 1;</code>
     * @return Whether the seqNr field is set.
     */
    boolean hasSeqNr();
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return The seqNr.
     */
    long getSeqNr();

    /**
     * <code>required .Payload payload = 2;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <code>required .Payload payload = 2;</code>
     * @return The payload.
     */
    akka.stream.StreamRefMessages.Payload getPayload();
    /**
     * <code>required .Payload payload = 2;</code>
     */
    akka.stream.StreamRefMessages.PayloadOrBuilder getPayloadOrBuilder();
  }
  /**
   * Protobuf type {@code SequencedOnNext}
   */
  public  static final class SequencedOnNext extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SequencedOnNext)
      SequencedOnNextOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SequencedOnNext.newBuilder() to construct.
    private SequencedOnNext(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SequencedOnNext() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new SequencedOnNext();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SequencedOnNext(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              seqNr_ = input.readInt64();
              break;
            }
            case 18: {
              akka.stream.StreamRefMessages.Payload.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = payload_.toBuilder();
              }
              payload_ = input.readMessage(akka.stream.StreamRefMessages.Payload.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(payload_);
                payload_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_SequencedOnNext_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_SequencedOnNext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.SequencedOnNext.class, akka.stream.StreamRefMessages.SequencedOnNext.Builder.class);
    }

    private int bitField0_;
    public static final int SEQNR_FIELD_NUMBER = 1;
    private long seqNr_;
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return Whether the seqNr field is set.
     */
    public boolean hasSeqNr() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return The seqNr.
     */
    public long getSeqNr() {
      return seqNr_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private akka.stream.StreamRefMessages.Payload payload_;
    /**
     * <code>required .Payload payload = 2;</code>
     * @return Whether the payload field is set.
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required .Payload payload = 2;</code>
     * @return The payload.
     */
    public akka.stream.StreamRefMessages.Payload getPayload() {
      return payload_ == null ? akka.stream.StreamRefMessages.Payload.getDefaultInstance() : payload_;
    }
    /**
     * <code>required .Payload payload = 2;</code>
     */
    public akka.stream.StreamRefMessages.PayloadOrBuilder getPayloadOrBuilder() {
      return payload_ == null ? akka.stream.StreamRefMessages.Payload.getDefaultInstance() : payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeqNr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPayload().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, seqNr_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getPayload());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeInt64Size(1, seqNr_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeMessageSize(2, getPayload());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.SequencedOnNext)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.SequencedOnNext other = (akka.stream.StreamRefMessages.SequencedOnNext) obj;

      if (hasSeqNr() != other.hasSeqNr()) return false;
      if (hasSeqNr()) {
        if (getSeqNr()
            != other.getSeqNr()) return false;
      }
      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeqNr()) {
        hash = (37 * hash) + SEQNR_FIELD_NUMBER;
        hash = (53 * hash) + akka.protobufv3.internal.Internal.hashLong(
            getSeqNr());
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.SequencedOnNext parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.SequencedOnNext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SequencedOnNext}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SequencedOnNext)
        akka.stream.StreamRefMessages.SequencedOnNextOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_SequencedOnNext_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_SequencedOnNext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.SequencedOnNext.class, akka.stream.StreamRefMessages.SequencedOnNext.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.SequencedOnNext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPayloadFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqNr_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (payloadBuilder_ == null) {
          payload_ = null;
        } else {
          payloadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_SequencedOnNext_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SequencedOnNext getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.SequencedOnNext.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SequencedOnNext build() {
        akka.stream.StreamRefMessages.SequencedOnNext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.SequencedOnNext buildPartial() {
        akka.stream.StreamRefMessages.SequencedOnNext result = new akka.stream.StreamRefMessages.SequencedOnNext(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.seqNr_ = seqNr_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (payloadBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = payloadBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.SequencedOnNext) {
          return mergeFrom((akka.stream.StreamRefMessages.SequencedOnNext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.SequencedOnNext other) {
        if (other == akka.stream.StreamRefMessages.SequencedOnNext.getDefaultInstance()) return this;
        if (other.hasSeqNr()) {
          setSeqNr(other.getSeqNr());
        }
        if (other.hasPayload()) {
          mergePayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSeqNr()) {
          return false;
        }
        if (!hasPayload()) {
          return false;
        }
        if (!getPayload().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.SequencedOnNext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.SequencedOnNext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long seqNr_ ;
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return Whether the seqNr field is set.
       */
      public boolean hasSeqNr() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return The seqNr.
       */
      public long getSeqNr() {
        return seqNr_;
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @param value The seqNr to set.
       * @return This builder for chaining.
       */
      public Builder setSeqNr(long value) {
        bitField0_ |= 0x00000001;
        seqNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeqNr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seqNr_ = 0L;
        onChanged();
        return this;
      }

      private akka.stream.StreamRefMessages.Payload payload_;
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.Payload, akka.stream.StreamRefMessages.Payload.Builder, akka.stream.StreamRefMessages.PayloadOrBuilder> payloadBuilder_;
      /**
       * <code>required .Payload payload = 2;</code>
       * @return Whether the payload field is set.
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required .Payload payload = 2;</code>
       * @return The payload.
       */
      public akka.stream.StreamRefMessages.Payload getPayload() {
        if (payloadBuilder_ == null) {
          return payload_ == null ? akka.stream.StreamRefMessages.Payload.getDefaultInstance() : payload_;
        } else {
          return payloadBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      public Builder setPayload(akka.stream.StreamRefMessages.Payload value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          payloadBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      public Builder setPayload(
          akka.stream.StreamRefMessages.Payload.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          payloadBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      public Builder mergePayload(akka.stream.StreamRefMessages.Payload value) {
        if (payloadBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              payload_ != null &&
              payload_ != akka.stream.StreamRefMessages.Payload.getDefaultInstance()) {
            payload_ =
              akka.stream.StreamRefMessages.Payload.newBuilder(payload_).mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          payloadBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      public Builder clearPayload() {
        if (payloadBuilder_ == null) {
          payload_ = null;
          onChanged();
        } else {
          payloadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      public akka.stream.StreamRefMessages.Payload.Builder getPayloadBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      public akka.stream.StreamRefMessages.PayloadOrBuilder getPayloadOrBuilder() {
        if (payloadBuilder_ != null) {
          return payloadBuilder_.getMessageOrBuilder();
        } else {
          return payload_ == null ?
              akka.stream.StreamRefMessages.Payload.getDefaultInstance() : payload_;
        }
      }
      /**
       * <code>required .Payload payload = 2;</code>
       */
      private akka.protobufv3.internal.SingleFieldBuilderV3<
          akka.stream.StreamRefMessages.Payload, akka.stream.StreamRefMessages.Payload.Builder, akka.stream.StreamRefMessages.PayloadOrBuilder> 
          getPayloadFieldBuilder() {
        if (payloadBuilder_ == null) {
          payloadBuilder_ = new akka.protobufv3.internal.SingleFieldBuilderV3<
              akka.stream.StreamRefMessages.Payload, akka.stream.StreamRefMessages.Payload.Builder, akka.stream.StreamRefMessages.PayloadOrBuilder>(
                  getPayload(),
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        return payloadBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SequencedOnNext)
    }

    // @@protoc_insertion_point(class_scope:SequencedOnNext)
    private static final akka.stream.StreamRefMessages.SequencedOnNext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.SequencedOnNext();
    }

    public static akka.stream.StreamRefMessages.SequencedOnNext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<SequencedOnNext>
        PARSER = new akka.protobufv3.internal.AbstractParser<SequencedOnNext>() {
      @java.lang.Override
      public SequencedOnNext parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new SequencedOnNext(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<SequencedOnNext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<SequencedOnNext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.SequencedOnNext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteStreamFailureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteStreamFailure)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>optional bytes cause = 1;</code>
     * @return Whether the cause field is set.
     */
    boolean hasCause();
    /**
     * <code>optional bytes cause = 1;</code>
     * @return The cause.
     */
    akka.protobufv3.internal.ByteString getCause();
  }
  /**
   * Protobuf type {@code RemoteStreamFailure}
   */
  public  static final class RemoteStreamFailure extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteStreamFailure)
      RemoteStreamFailureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteStreamFailure.newBuilder() to construct.
    private RemoteStreamFailure(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteStreamFailure() {
      cause_ = akka.protobufv3.internal.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new RemoteStreamFailure();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteStreamFailure(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              cause_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_RemoteStreamFailure_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_RemoteStreamFailure_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.RemoteStreamFailure.class, akka.stream.StreamRefMessages.RemoteStreamFailure.Builder.class);
    }

    private int bitField0_;
    public static final int CAUSE_FIELD_NUMBER = 1;
    private akka.protobufv3.internal.ByteString cause_;
    /**
     * <code>optional bytes cause = 1;</code>
     * @return Whether the cause field is set.
     */
    public boolean hasCause() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bytes cause = 1;</code>
     * @return The cause.
     */
    public akka.protobufv3.internal.ByteString getCause() {
      return cause_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, cause_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeBytesSize(1, cause_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.RemoteStreamFailure)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.RemoteStreamFailure other = (akka.stream.StreamRefMessages.RemoteStreamFailure) obj;

      if (hasCause() != other.hasCause()) return false;
      if (hasCause()) {
        if (!getCause()
            .equals(other.getCause())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCause()) {
        hash = (37 * hash) + CAUSE_FIELD_NUMBER;
        hash = (53 * hash) + getCause().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamFailure parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.RemoteStreamFailure prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RemoteStreamFailure}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteStreamFailure)
        akka.stream.StreamRefMessages.RemoteStreamFailureOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_RemoteStreamFailure_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_RemoteStreamFailure_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.RemoteStreamFailure.class, akka.stream.StreamRefMessages.RemoteStreamFailure.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.RemoteStreamFailure.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cause_ = akka.protobufv3.internal.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_RemoteStreamFailure_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.RemoteStreamFailure getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.RemoteStreamFailure.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.RemoteStreamFailure build() {
        akka.stream.StreamRefMessages.RemoteStreamFailure result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.RemoteStreamFailure buildPartial() {
        akka.stream.StreamRefMessages.RemoteStreamFailure result = new akka.stream.StreamRefMessages.RemoteStreamFailure(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cause_ = cause_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.RemoteStreamFailure) {
          return mergeFrom((akka.stream.StreamRefMessages.RemoteStreamFailure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.RemoteStreamFailure other) {
        if (other == akka.stream.StreamRefMessages.RemoteStreamFailure.getDefaultInstance()) return this;
        if (other.hasCause()) {
          setCause(other.getCause());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.RemoteStreamFailure parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.RemoteStreamFailure) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private akka.protobufv3.internal.ByteString cause_ = akka.protobufv3.internal.ByteString.EMPTY;
      /**
       * <code>optional bytes cause = 1;</code>
       * @return Whether the cause field is set.
       */
      public boolean hasCause() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bytes cause = 1;</code>
       * @return The cause.
       */
      public akka.protobufv3.internal.ByteString getCause() {
        return cause_;
      }
      /**
       * <code>optional bytes cause = 1;</code>
       * @param value The cause to set.
       * @return This builder for chaining.
       */
      public Builder setCause(akka.protobufv3.internal.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cause_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes cause = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCause() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cause_ = getDefaultInstance().getCause();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteStreamFailure)
    }

    // @@protoc_insertion_point(class_scope:RemoteStreamFailure)
    private static final akka.stream.StreamRefMessages.RemoteStreamFailure DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.RemoteStreamFailure();
    }

    public static akka.stream.StreamRefMessages.RemoteStreamFailure getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<RemoteStreamFailure>
        PARSER = new akka.protobufv3.internal.AbstractParser<RemoteStreamFailure>() {
      @java.lang.Override
      public RemoteStreamFailure parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new RemoteStreamFailure(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<RemoteStreamFailure> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<RemoteStreamFailure> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.RemoteStreamFailure getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteStreamCompletedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteStreamCompleted)
      akka.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required int64 seqNr = 1;</code>
     * @return Whether the seqNr field is set.
     */
    boolean hasSeqNr();
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return The seqNr.
     */
    long getSeqNr();
  }
  /**
   * Protobuf type {@code RemoteStreamCompleted}
   */
  public  static final class RemoteStreamCompleted extends
      akka.protobufv3.internal.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteStreamCompleted)
      RemoteStreamCompletedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteStreamCompleted.newBuilder() to construct.
    private RemoteStreamCompleted(akka.protobufv3.internal.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteStreamCompleted() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        akka.protobufv3.internal.GeneratedMessageV3.UnusedPrivateParameter unused) {
      return new RemoteStreamCompleted();
    }

    @java.lang.Override
    public final akka.protobufv3.internal.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteStreamCompleted(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      akka.protobufv3.internal.UnknownFieldSet.Builder unknownFields =
          akka.protobufv3.internal.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              seqNr_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobufv3.internal.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return akka.stream.StreamRefMessages.internal_static_RemoteStreamCompleted_descriptor;
    }

    @java.lang.Override
    protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.stream.StreamRefMessages.internal_static_RemoteStreamCompleted_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.stream.StreamRefMessages.RemoteStreamCompleted.class, akka.stream.StreamRefMessages.RemoteStreamCompleted.Builder.class);
    }

    private int bitField0_;
    public static final int SEQNR_FIELD_NUMBER = 1;
    private long seqNr_;
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return Whether the seqNr field is set.
     */
    public boolean hasSeqNr() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 seqNr = 1;</code>
     * @return The seqNr.
     */
    public long getSeqNr() {
      return seqNr_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeqNr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(akka.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, seqNr_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += akka.protobufv3.internal.CodedOutputStream
          .computeInt64Size(1, seqNr_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof akka.stream.StreamRefMessages.RemoteStreamCompleted)) {
        return super.equals(obj);
      }
      akka.stream.StreamRefMessages.RemoteStreamCompleted other = (akka.stream.StreamRefMessages.RemoteStreamCompleted) obj;

      if (hasSeqNr() != other.hasSeqNr()) return false;
      if (hasSeqNr()) {
        if (getSeqNr()
            != other.getSeqNr()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeqNr()) {
        hash = (37 * hash) + SEQNR_FIELD_NUMBER;
        hash = (53 * hash) + akka.protobufv3.internal.Internal.hashLong(
            getSeqNr());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        java.nio.ByteBuffer data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        java.nio.ByteBuffer data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        akka.protobufv3.internal.ByteString data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        akka.protobufv3.internal.ByteString data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(byte[] data)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        byte[] data,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws akka.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        akka.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static akka.stream.StreamRefMessages.RemoteStreamCompleted parseFrom(
        akka.protobufv3.internal.CodedInputStream input,
        akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return akka.protobufv3.internal.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(akka.stream.StreamRefMessages.RemoteStreamCompleted prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RemoteStreamCompleted}
     */
    public static final class Builder extends
        akka.protobufv3.internal.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteStreamCompleted)
        akka.stream.StreamRefMessages.RemoteStreamCompletedOrBuilder {
      public static final akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return akka.stream.StreamRefMessages.internal_static_RemoteStreamCompleted_descriptor;
      }

      @java.lang.Override
      protected akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.stream.StreamRefMessages.internal_static_RemoteStreamCompleted_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.stream.StreamRefMessages.RemoteStreamCompleted.class, akka.stream.StreamRefMessages.RemoteStreamCompleted.Builder.class);
      }

      // Construct using akka.stream.StreamRefMessages.RemoteStreamCompleted.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobufv3.internal.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobufv3.internal.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqNr_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public akka.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.stream.StreamRefMessages.internal_static_RemoteStreamCompleted_descriptor;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.RemoteStreamCompleted getDefaultInstanceForType() {
        return akka.stream.StreamRefMessages.RemoteStreamCompleted.getDefaultInstance();
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.RemoteStreamCompleted build() {
        akka.stream.StreamRefMessages.RemoteStreamCompleted result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public akka.stream.StreamRefMessages.RemoteStreamCompleted buildPartial() {
        akka.stream.StreamRefMessages.RemoteStreamCompleted result = new akka.stream.StreamRefMessages.RemoteStreamCompleted(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.seqNr_ = seqNr_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          akka.protobufv3.internal.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          akka.protobufv3.internal.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(akka.protobufv3.internal.Message other) {
        if (other instanceof akka.stream.StreamRefMessages.RemoteStreamCompleted) {
          return mergeFrom((akka.stream.StreamRefMessages.RemoteStreamCompleted)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.stream.StreamRefMessages.RemoteStreamCompleted other) {
        if (other == akka.stream.StreamRefMessages.RemoteStreamCompleted.getDefaultInstance()) return this;
        if (other.hasSeqNr()) {
          setSeqNr(other.getSeqNr());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSeqNr()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.stream.StreamRefMessages.RemoteStreamCompleted parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobufv3.internal.InvalidProtocolBufferException e) {
          parsedMessage = (akka.stream.StreamRefMessages.RemoteStreamCompleted) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long seqNr_ ;
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return Whether the seqNr field is set.
       */
      public boolean hasSeqNr() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return The seqNr.
       */
      public long getSeqNr() {
        return seqNr_;
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @param value The seqNr to set.
       * @return This builder for chaining.
       */
      public Builder setSeqNr(long value) {
        bitField0_ |= 0x00000001;
        seqNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 seqNr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeqNr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seqNr_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final akka.protobufv3.internal.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteStreamCompleted)
    }

    // @@protoc_insertion_point(class_scope:RemoteStreamCompleted)
    private static final akka.stream.StreamRefMessages.RemoteStreamCompleted DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new akka.stream.StreamRefMessages.RemoteStreamCompleted();
    }

    public static akka.stream.StreamRefMessages.RemoteStreamCompleted getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final akka.protobufv3.internal.Parser<RemoteStreamCompleted>
        PARSER = new akka.protobufv3.internal.AbstractParser<RemoteStreamCompleted>() {
      @java.lang.Override
      public RemoteStreamCompleted parsePartialFrom(
          akka.protobufv3.internal.CodedInputStream input,
          akka.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws akka.protobufv3.internal.InvalidProtocolBufferException {
        return new RemoteStreamCompleted(input, extensionRegistry);
      }
    };

    public static akka.protobufv3.internal.Parser<RemoteStreamCompleted> parser() {
      return PARSER;
    }

    @java.lang.Override
    public akka.protobufv3.internal.Parser<RemoteStreamCompleted> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public akka.stream.StreamRefMessages.RemoteStreamCompleted getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_SinkRef_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_SinkRef_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_SourceRef_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_SourceRef_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_ActorRef_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_ActorRef_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_Payload_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_Payload_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_OnSubscribeHandshake_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_OnSubscribeHandshake_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_CumulativeDemand_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_CumulativeDemand_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_SequencedOnNext_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_SequencedOnNext_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_RemoteStreamFailure_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteStreamFailure_fieldAccessorTable;
  private static final akka.protobufv3.internal.Descriptors.Descriptor
    internal_static_RemoteStreamCompleted_descriptor;
  private static final 
    akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteStreamCompleted_fieldAccessorTable;

  public static akka.protobufv3.internal.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  akka.protobufv3.internal.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027StreamRefMessages.proto\"\'\n\007SinkRef\022\034\n\t" +
      "targetRef\030\001 \002(\0132\t.ActorRef\")\n\tSourceRef\022" +
      "\034\n\toriginRef\030\001 \002(\0132\t.ActorRef\"\030\n\010ActorRe" +
      "f\022\014\n\004path\030\001 \002(\t\"Q\n\007Payload\022\027\n\017enclosedMe" +
      "ssage\030\001 \002(\014\022\024\n\014serializerId\030\002 \002(\005\022\027\n\017mes" +
      "sageManifest\030\003 \001(\014\"4\n\024OnSubscribeHandsha" +
      "ke\022\034\n\ttargetRef\030\001 \002(\0132\t.ActorRef\"!\n\020Cumu" +
      "lativeDemand\022\r\n\005seqNr\030\001 \002(\003\";\n\017Sequenced" +
      "OnNext\022\r\n\005seqNr\030\001 \002(\003\022\031\n\007payload\030\002 \002(\0132\010" +
      ".Payload\"$\n\023RemoteStreamFailure\022\r\n\005cause" +
      "\030\001 \001(\014\"&\n\025RemoteStreamCompleted\022\r\n\005seqNr" +
      "\030\001 \002(\003B\017\n\013akka.streamH\001"
    };
    descriptor = akka.protobufv3.internal.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new akka.protobufv3.internal.Descriptors.FileDescriptor[] {
        });
    internal_static_SinkRef_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SinkRef_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SinkRef_descriptor,
        new java.lang.String[] { "TargetRef", });
    internal_static_SourceRef_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SourceRef_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SourceRef_descriptor,
        new java.lang.String[] { "OriginRef", });
    internal_static_ActorRef_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ActorRef_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ActorRef_descriptor,
        new java.lang.String[] { "Path", });
    internal_static_Payload_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Payload_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Payload_descriptor,
        new java.lang.String[] { "EnclosedMessage", "SerializerId", "MessageManifest", });
    internal_static_OnSubscribeHandshake_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_OnSubscribeHandshake_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OnSubscribeHandshake_descriptor,
        new java.lang.String[] { "TargetRef", });
    internal_static_CumulativeDemand_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CumulativeDemand_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CumulativeDemand_descriptor,
        new java.lang.String[] { "SeqNr", });
    internal_static_SequencedOnNext_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SequencedOnNext_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SequencedOnNext_descriptor,
        new java.lang.String[] { "SeqNr", "Payload", });
    internal_static_RemoteStreamFailure_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_RemoteStreamFailure_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteStreamFailure_descriptor,
        new java.lang.String[] { "Cause", });
    internal_static_RemoteStreamCompleted_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_RemoteStreamCompleted_fieldAccessorTable = new
      akka.protobufv3.internal.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteStreamCompleted_descriptor,
        new java.lang.String[] { "SeqNr", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
