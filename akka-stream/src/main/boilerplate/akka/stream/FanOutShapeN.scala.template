/*
 * Copyright (C) 2014-2021 Lightbend Inc. <https://www.lightbend.com>
 */

package akka.stream

[2..#class FanOutShape1[-I, [#+O0#]](_init: FanOutShape.Init[I]) extends FanOutShape[I](_init) {
  def this(name: String) = this(FanOutShape.Name[I](name))
  def this(in: Inlet[I], [#out0: Outlet[O0]#]) = this(FanOutShape.Ports(in, [#out0# :: ] :: Nil))
  override protected def construct[J <: I](init: FanOutShape.Init[J]): FanOutShape[J] = new FanOutShape1(init)
  override def deepCopy(): FanOutShape1[I, [#O0#]] = super.deepCopy().asInstanceOf[FanOutShape1[I, [#O0#]]]
  
  [#val out0: Outlet[O0] = newOutlet[O0]("out0")#
  ]
}#

]
