/*
 * Copyright (C) 2014-2021 Lightbend Inc. <https://www.lightbend.com>
 */

package akka.stream

[2..#class FanInShape1[[#-T0#], +O](_init: FanInShape.Init[O]) extends FanInShape[O](_init) {
  def this(name: String) = this(FanInShape.Name[O](name))
  def this([#in0: Inlet[T0]#], out: Outlet[O]) = this(FanInShape.Ports(out, [#in0# :: ] :: Nil))
  override protected def construct[N >: O](init: FanInShape.Init[N]): FanInShape[N] = new FanInShape1(init)
  override def deepCopy(): FanInShape1[[#T0#], O] = super.deepCopy().asInstanceOf[FanInShape1[[#T0#], O]]

  [#val in0: Inlet[T0] = newInlet[T0]("in0")#
  ]
}#

]
