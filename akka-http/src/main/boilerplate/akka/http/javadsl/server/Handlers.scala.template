/*
 * Copyright (C) 2009-2015 Lightbend Inc. <http://www.lightbend.com>
 */
package akka.http.javadsl.server

import java.util.concurrent.CompletionStage

[..21#/**
 * A route Handler that handles a request (that is encapsulated in a [[RequestContext]])
 * and returns a [[RouteResult]] with the response (or the rejection).
 *
 * A route `Handler1` is a convenience class that extends Function of arity `N+1`,
 * since it needs to pass along the [[RequestContext]] as well, yet for readability
 * purposes we can see it as "handles 1 route arguments".
 *
 * Use the methods in [[RequestContext]] to create a [[RouteResult]].
 * A handler MUST NOT return `null` as the result.
 */
trait Handler1[[#T1#]] extends akka.japi.function.Function2[RequestContext, [#T1#], RouteResult] {
  override def apply(ctx: RequestContext, [#t1: T1#]): RouteResult
}
/**
 * A route Handler that handles a request (that is encapsulated in a [[RequestContext]])
 * and returns a [[java.util.concurrent.CompletionStage]] of [[RouteResult]] with the response (or the rejection).
 *
 * A route `Handler1` is a convenience class that extends Function of arity `N+1`,
 * since it needs to pass along the [[RequestContext]] as well, yet for readability
 * purposes we can see it as "handles 1 route arguments".
 *
 * Use the methods in [[RequestContext]] to create a [[RouteResult]].
 * A handler MUST NOT return `null` as the result.
 */
trait AsyncHandler1[[#T1#]] extends akka.japi.function.Function2[RequestContext, [#T1#], CompletionStage[RouteResult]] {
  override def apply(ctx: RequestContext, [#t1: T1#]): CompletionStage[RouteResult]
}#

]
