#
# Run the "glimpse" trace (gli.trace) from the authors of the LIRS algorithm.
#
# LIRS: An Efficient Low Inter-reference Recency Set Replacement Policy to Improve Buffer Cache Performance
# Song Jiang and Xiaodong Zhang
#
# Download traces from: https://github.com/zhongch4g/LIRS2
#
# > akka-cluster-sharding/Test/runMain akka.cluster.sharding.passivation.simulator.Simulator lirs-trace-glimpse
#
#   ╔═════════════════════╤═════════╤══════════╤═════════════╤══════════════╗
#   ║                 Run │  Active │ Accesses │ Activations │ Passivations ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║             OPT 250 │ 17.70 % │    6,016 │       4,951 │        4,701 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║             OPT 500 │ 34.33 % │    6,016 │       3,951 │        3,451 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            OPT 1000 │ 53.14 % │    6,016 │       2,819 │        1,819 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            OPT 1500 │ 57.95 % │    6,016 │       2,530 │        1,030 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║             LRU 250 │  0.91 % │    6,016 │       5,961 │        5,711 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║             LRU 500 │  0.95 % │    6,016 │       5,959 │        5,459 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            LRU 1000 │ 11.20 % │    6,016 │       5,342 │        4,342 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            LRU 1500 │ 36.55 % │    6,016 │       3,817 │        2,317 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║            SLRU 250 │  1.38 % │    6,016 │       5,933 │        5,683 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            SLRU 500 │  1.38 % │    6,016 │       5,933 │        5,433 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║           SLRU 1000 │ 31.33 % │    6,016 │       4,131 │        3,131 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║           SLRU 1500 │ 51.85 % │    6,016 │       2,897 │        1,397 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║           S4LRU 250 │  1.38 % │    6,016 │       5,933 │        5,693 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║           S4LRU 500 │  1.38 % │    6,016 │       5,933 │        5,453 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║          S4LRU 1000 │ 19.70 % │    6,016 │       4,831 │        3,831 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║          S4LRU 1500 │ 48.02 % │    6,016 │       3,127 │        1,647 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║             MRU 250 │ 14.78 % │    6,016 │       5,127 │        4,877 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║             MRU 500 │ 31.40 % │    6,016 │       4,127 │        3,627 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            MRU 1000 │ 48.62 % │    6,016 │       3,091 │        2,091 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            MRU 1500 │ 53.37 % │    6,016 │       2,805 │        1,305 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║             LFU 250 │  1.38 % │    6,016 │       5,933 │        5,683 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║             LFU 500 │  1.38 % │    6,016 │       5,933 │        5,433 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            LFU 1000 │ 31.33 % │    6,016 │       4,131 │        3,131 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║            LFU 1500 │ 51.85 % │    6,016 │       2,897 │        1,397 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║           LFUDA 250 │  1.11 % │    6,016 │       5,949 │        5,699 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║           LFUDA 500 │  1.25 % │    6,016 │       5,941 │        5,441 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║          LFUDA 1000 │ 16.37 % │    6,016 │       5,031 │        4,031 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║          LFUDA 1500 │ 51.85 % │    6,016 │       2,897 │        1,397 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║     LRU/FS/SLRU 250 │ 13.43 % │    6,016 │       5,208 │        4,958 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║     LRU/FS/SLRU 500 │ 32.40 % │    6,016 │       4,067 │        3,567 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║    LRU/FS/SLRU 1000 │ 50.83 % │    6,016 │       2,958 │        1,958 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║    LRU/FS/SLRU 1500 │ 53.54 % │    6,016 │       2,795 │        1,295 ║
#   ╠═════════════════════╪═════════╪══════════╪═════════════╪══════════════╣
#   ║  LRU/FS/SLRU/HC 250 │ 13.43 % │    6,016 │       5,208 │        4,958 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║  LRU/FS/SLRU/HC 500 │ 32.40 % │    6,016 │       4,067 │        3,567 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║ LRU/FS/SLRU/HC 1000 │ 50.83 % │    6,016 │       2,958 │        1,958 ║
#   ╟─────────────────────┼─────────┼──────────┼─────────────┼──────────────╢
#   ║ LRU/FS/SLRU/HC 1500 │ 53.54 % │    6,016 │       2,795 │        1,295 ║
#   ╚═════════════════════╧═════════╧══════════╧═════════════╧══════════════╝
#

lirs-traces="lirs-traces"
lirs-traces=${?LIRS_TRACES}

akka.cluster.sharding {
  passivation.simulator {
    runs = [
      {
        name = "OPT 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = optimal-250
      },
      {
        name = "OPT 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = optimal-500
      },
      {
        name = "OPT 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = optimal-1000
      },
      {
        name = "OPT 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = optimal-1500
      },
      {
        name = "LRU 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-250
      },
      {
        name = "LRU 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-500
      },
      {
        name = "LRU 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-1000
      },
      {
        name = "LRU 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-1500
      },
      {
        name = "SLRU 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = slru-250
      },
      {
        name = "SLRU 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = slru-500
      },
      {
        name = "SLRU 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = slru-1000
      },
      {
        name = "SLRU 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = slru-1500
      },
      {
        name = "S4LRU 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = s4lru-250
      },
      {
        name = "S4LRU 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = s4lru-500
      },
      {
        name = "S4LRU 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = s4lru-1000
      },
      {
        name = "S4LRU 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = s4lru-1500
      },
      {
        name = "MRU 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = mru-250
      },
      {
        name = "MRU 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = mru-500
      },
      {
        name = "MRU 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = mru-1000
      },
      {
        name = "MRU 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = mru-1500
      },
      {
        name = "LFU 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfu-250
      },
      {
        name = "LFU 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfu-500
      },
      {
        name = "LFU 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfu-1000
      },
      {
        name = "LFU 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfu-1500
      },
      {
        name = "LFUDA 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfuda-250
      },
      {
        name = "LFUDA 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfuda-500
      },
      {
        name = "LFUDA 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfuda-1000
      },
      {
        name = "LFUDA 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lfuda-1500
      },
      {
        name = "LRU/FS/SLRU 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-250
      },
      {
        name = "LRU/FS/SLRU 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-500
      },
      {
        name = "LRU/FS/SLRU 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-1000
      },
      {
        name = "LRU/FS/SLRU 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-1500
      },
      {
        name = "LRU/FS/SLRU/HC 250"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-hc-250
      },
      {
        name = "LRU/FS/SLRU/HC 500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-hc-500
      },
      {
        name = "LRU/FS/SLRU/HC 1000"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-hc-1000
      },
      {
        name = "LRU/FS/SLRU/HC 1500"
        shards = 10
        regions = 1
        pattern = lirs-glimpse
        strategy = lru-fs-slru-hc-1500
      },
    ]

    print-detailed-stats = true

    lirs-glimpse {
      pattern = trace
      trace {
        format = lirs
        path = ${lirs-traces}"/gli.trace"
      }
    }

    optimal-250 {
      strategy = optimal
      optimal {
        per-region-limit = 250
      }
    }

    optimal-500 {
      strategy = optimal
      optimal {
        per-region-limit = 500
      }
    }

    optimal-1000 {
      strategy = optimal
      optimal {
        per-region-limit = 1000
      }
    }

    optimal-1500 {
      strategy = optimal
      optimal {
        per-region-limit = 1500
      }
    }

    lru-250 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 250
      }
    }

    lru-500 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 500
      }
    }

    lru-1000 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 1000
      }
    }

    lru-1500 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 1500
      }
    }

    slru-250 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 250
        segmented {
          levels = 2
          proportions = [0.2, 0.8]
        }
      }
    }

    slru-500 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 500
        segmented {
          levels = 2
          proportions = [0.2, 0.8]
        }
      }
    }

    slru-1000 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 1000
        segmented {
          levels = 2
          proportions = [0.2, 0.8]
        }
      }
    }

    slru-1500 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 1500
        segmented {
          levels = 2
          proportions = [0.2, 0.8]
        }
      }
    }

    s4lru-250 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 250
        segmented.levels = 4
      }
    }

    s4lru-500 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 500
        segmented.levels = 4
      }
    }

    s4lru-1000 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 1000
        segmented.levels = 4
      }
    }

    s4lru-1500 {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 1500
        segmented.levels = 4
      }
    }

    mru-250 {
      strategy = most-recently-used
      most-recently-used {
        per-region-limit = 250
      }
    }

    mru-500 {
      strategy = most-recently-used
      most-recently-used {
        per-region-limit = 500
      }
    }

    mru-1000 {
      strategy = most-recently-used
      most-recently-used {
        per-region-limit = 1000
      }
    }

    mru-1500 {
      strategy = most-recently-used
      most-recently-used {
        per-region-limit = 1500
      }
    }

    lfu-250 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 250
      }
    }

    lfu-500 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 500
      }
    }

    lfu-1000 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 1000
      }
    }

    lfu-1500 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 1500
      }
    }

    lfuda-250 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 250
        dynamic-aging = on
      }
    }

    lfuda-500 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 500
        dynamic-aging = on
      }
    }

    lfuda-1000 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 1000
        dynamic-aging = on
      }
    }

    lfuda-1500 {
      strategy = least-frequently-used
      least-frequently-used {
        per-region-limit = 1500
        dynamic-aging = on
      }
    }

    lru-fs-slru {
      strategy = composite
      composite {
        admission {
          window.strategy = least-recently-used
          filter = frequency-sketch
          optimizer = none
        }
        main {
          strategy = least-recently-used
          least-recently-used {
            segmented {
              levels = 2
              proportions = [0.2, 0.8]
            }
          }
        }
      }
    }

    lru-fs-slru-250 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru} {
      composite.per-region-limit = 250
    }

    lru-fs-slru-500 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru} {
      composite.per-region-limit = 500
    }

    lru-fs-slru-1000 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru} {
      composite.per-region-limit = 1000
    }

    lru-fs-slru-1500 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru} {
      composite.per-region-limit = 1500
    }

    lru-fs-slru-hc = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru} {
      composite.admission.optimizer = hill-climbing
    }

    lru-fs-slru-hc-250 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru-hc} {
      composite.per-region-limit = 250
    }

    lru-fs-slru-hc-500 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru-hc} {
      composite.per-region-limit = 500
    }

    lru-fs-slru-hc-1000 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru-hc} {
      composite.per-region-limit = 1000
    }

    lru-fs-slru-hc-1500 = ${akka.cluster.sharding.passivation.simulator.lru-fs-slru-hc} {
      composite.per-region-limit = 1500
    }

  }
}
