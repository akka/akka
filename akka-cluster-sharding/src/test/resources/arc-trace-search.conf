#
# Run the merged "search" trace (MergeS) from the authors of the ARC algorithm.
#
# Nimrod Megiddo and Dharmendra S. Modha, "ARC: A Self-Tuning, Low Overhead Replacement Cache".
#
# Download traces from the author's home page:
# https://researcher.watson.ibm.com/researcher/view_person_subpage.php?id=4700
#
# > akka-cluster-sharding/Test/runMain akka.cluster.sharding.passivation.simulator.Simulator arc-trace-search
#
#   ╔══════════╤═════════╤════════════╤═════════════╤══════════════╗
#   ║      Run │  Active │   Accesses │ Activations │ Passivations ║
#   ╠══════════╪═════════╪════════════╪═════════════╪══════════════╣
#   ║ LRU 250k │  3.07 % │ 37,656,092 │  36,498,516 │   36,248,516 ║
#   ╟──────────┼─────────┼────────────┼─────────────┼──────────────╢
#   ║ LRU 500k │  7.53 % │ 37,656,092 │  34,822,122 │   34,322,122 ║
#   ╟──────────┼─────────┼────────────┼─────────────┼──────────────╢
#   ║   LRU 1M │ 25.37 % │ 37,656,092 │  28,102,287 │   27,102,287 ║
#   ╚══════════╧═════════╧════════════╧═════════════╧══════════════╝
#

arc-traces="arc-traces"
arc-traces=${?ARC_TRACES}

akka.cluster.sharding {
  passivation.simulator {
    runs = [
      {
        name = "LRU 250k"
        shards = 100
        regions = 10
        pattern = arc-search-merged
        strategy = lru-25k
      },
      {
        name = "LRU 500k"
        shards = 100
        regions = 10
        pattern = arc-search-merged
        strategy = lru-50k
      },
      {
        name = "LRU 1M"
        shards = 100
        regions = 10
        pattern = arc-search-merged
        strategy = lru-100k
      }
    ]

    print-detailed-stats = true

    arc-search-merged {
      pattern = trace
      trace {
        format = arc
        path = ${arc-traces}"/MergeS.lis"
      }
    }

    lru-25k {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 25000
      }
    }

    lru-50k {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 50000
      }
    }

    lru-100k {
      strategy = least-recently-used
      least-recently-used {
        per-region-limit = 100000
      }
    }
  }
}
