// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemMessageFormats.proto

package akka.remote;

public final class SystemMessageFormats {
  private SystemMessageFormats() {}
  public static void registerAllExtensions(
      akka.protobuf.ExtensionRegistry registry) {
  }
  public interface SystemMessageOrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // required .SystemMessage.Type type = 1;
    /**
     * <code>required .SystemMessage.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .SystemMessage.Type type = 1;</code>
     */
    akka.remote.SystemMessageFormats.SystemMessage.Type getType();

    // optional .WatchData watchData = 2;
    /**
     * <code>optional .WatchData watchData = 2;</code>
     */
    boolean hasWatchData();
    /**
     * <code>optional .WatchData watchData = 2;</code>
     */
    akka.remote.SystemMessageFormats.WatchData getWatchData();
    /**
     * <code>optional .WatchData watchData = 2;</code>
     */
    akka.remote.SystemMessageFormats.WatchDataOrBuilder getWatchDataOrBuilder();

    // optional .Payload causeData = 3;
    /**
     * <code>optional .Payload causeData = 3;</code>
     */
    boolean hasCauseData();
    /**
     * <code>optional .Payload causeData = 3;</code>
     */
    akka.remote.ContainerFormats.Payload getCauseData();
    /**
     * <code>optional .Payload causeData = 3;</code>
     */
    akka.remote.ContainerFormats.PayloadOrBuilder getCauseDataOrBuilder();

    // optional .SuperviseData superviseData = 5;
    /**
     * <code>optional .SuperviseData superviseData = 5;</code>
     */
    boolean hasSuperviseData();
    /**
     * <code>optional .SuperviseData superviseData = 5;</code>
     */
    akka.remote.SystemMessageFormats.SuperviseData getSuperviseData();
    /**
     * <code>optional .SuperviseData superviseData = 5;</code>
     */
    akka.remote.SystemMessageFormats.SuperviseDataOrBuilder getSuperviseDataOrBuilder();

    // optional .FailedData failedData = 6;
    /**
     * <code>optional .FailedData failedData = 6;</code>
     */
    boolean hasFailedData();
    /**
     * <code>optional .FailedData failedData = 6;</code>
     */
    akka.remote.SystemMessageFormats.FailedData getFailedData();
    /**
     * <code>optional .FailedData failedData = 6;</code>
     */
    akka.remote.SystemMessageFormats.FailedDataOrBuilder getFailedDataOrBuilder();

    // optional .DeathWatchNotificationData dwNotificationData = 7;
    /**
     * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
     */
    boolean hasDwNotificationData();
    /**
     * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
     */
    akka.remote.SystemMessageFormats.DeathWatchNotificationData getDwNotificationData();
    /**
     * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
     */
    akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder getDwNotificationDataOrBuilder();
  }
  /**
   * Protobuf type {@code SystemMessage}
   */
  public static final class SystemMessage extends
      akka.protobuf.GeneratedMessage
      implements SystemMessageOrBuilder {
    // Use SystemMessage.newBuilder() to construct.
    private SystemMessage(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SystemMessage(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SystemMessage defaultInstance;
    public static SystemMessage getDefaultInstance() {
      return defaultInstance;
    }

    public SystemMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SystemMessage(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              akka.remote.SystemMessageFormats.SystemMessage.Type value = akka.remote.SystemMessageFormats.SystemMessage.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              akka.remote.SystemMessageFormats.WatchData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = watchData_.toBuilder();
              }
              watchData_ = input.readMessage(akka.remote.SystemMessageFormats.WatchData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(watchData_);
                watchData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              akka.remote.ContainerFormats.Payload.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = causeData_.toBuilder();
              }
              causeData_ = input.readMessage(akka.remote.ContainerFormats.Payload.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(causeData_);
                causeData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              akka.remote.SystemMessageFormats.SuperviseData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = superviseData_.toBuilder();
              }
              superviseData_ = input.readMessage(akka.remote.SystemMessageFormats.SuperviseData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(superviseData_);
                superviseData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              akka.remote.SystemMessageFormats.FailedData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = failedData_.toBuilder();
              }
              failedData_ = input.readMessage(akka.remote.SystemMessageFormats.FailedData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(failedData_);
                failedData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = dwNotificationData_.toBuilder();
              }
              dwNotificationData_ = input.readMessage(akka.remote.SystemMessageFormats.DeathWatchNotificationData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dwNotificationData_);
                dwNotificationData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.SystemMessageFormats.internal_static_SystemMessage_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.SystemMessageFormats.internal_static_SystemMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.remote.SystemMessageFormats.SystemMessage.class, akka.remote.SystemMessageFormats.SystemMessage.Builder.class);
    }

    public static akka.protobuf.Parser<SystemMessage> PARSER =
        new akka.protobuf.AbstractParser<SystemMessage>() {
      public SystemMessage parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new SystemMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<SystemMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code SystemMessage.Type}
     */
    public enum Type
        implements akka.protobuf.ProtocolMessageEnum {
      /**
       * <code>CREATE = 0;</code>
       */
      CREATE(0, 0),
      /**
       * <code>RECREATE = 1;</code>
       */
      RECREATE(1, 1),
      /**
       * <code>SUSPEND = 2;</code>
       */
      SUSPEND(2, 2),
      /**
       * <code>RESUME = 3;</code>
       */
      RESUME(3, 3),
      /**
       * <code>TERMINATE = 4;</code>
       */
      TERMINATE(4, 4),
      /**
       * <code>SUPERVISE = 5;</code>
       */
      SUPERVISE(5, 5),
      /**
       * <code>WATCH = 6;</code>
       */
      WATCH(6, 6),
      /**
       * <code>UNWATCH = 7;</code>
       */
      UNWATCH(7, 7),
      /**
       * <code>FAILED = 8;</code>
       */
      FAILED(8, 8),
      /**
       * <code>DEATHWATCH_NOTIFICATION = 9;</code>
       */
      DEATHWATCH_NOTIFICATION(9, 9),
      ;

      /**
       * <code>CREATE = 0;</code>
       */
      public static final int CREATE_VALUE = 0;
      /**
       * <code>RECREATE = 1;</code>
       */
      public static final int RECREATE_VALUE = 1;
      /**
       * <code>SUSPEND = 2;</code>
       */
      public static final int SUSPEND_VALUE = 2;
      /**
       * <code>RESUME = 3;</code>
       */
      public static final int RESUME_VALUE = 3;
      /**
       * <code>TERMINATE = 4;</code>
       */
      public static final int TERMINATE_VALUE = 4;
      /**
       * <code>SUPERVISE = 5;</code>
       */
      public static final int SUPERVISE_VALUE = 5;
      /**
       * <code>WATCH = 6;</code>
       */
      public static final int WATCH_VALUE = 6;
      /**
       * <code>UNWATCH = 7;</code>
       */
      public static final int UNWATCH_VALUE = 7;
      /**
       * <code>FAILED = 8;</code>
       */
      public static final int FAILED_VALUE = 8;
      /**
       * <code>DEATHWATCH_NOTIFICATION = 9;</code>
       */
      public static final int DEATHWATCH_NOTIFICATION_VALUE = 9;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return CREATE;
          case 1: return RECREATE;
          case 2: return SUSPEND;
          case 3: return RESUME;
          case 4: return TERMINATE;
          case 5: return SUPERVISE;
          case 6: return WATCH;
          case 7: return UNWATCH;
          case 8: return FAILED;
          case 9: return DEATHWATCH_NOTIFICATION;
          default: return null;
        }
      }

      public static akka.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static akka.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new akka.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final akka.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final akka.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final akka.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return akka.remote.SystemMessageFormats.SystemMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          akka.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SystemMessage.Type)
    }

    private int bitField0_;
    // required .SystemMessage.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private akka.remote.SystemMessageFormats.SystemMessage.Type type_;
    /**
     * <code>required .SystemMessage.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .SystemMessage.Type type = 1;</code>
     */
    public akka.remote.SystemMessageFormats.SystemMessage.Type getType() {
      return type_;
    }

    // optional .WatchData watchData = 2;
    public static final int WATCHDATA_FIELD_NUMBER = 2;
    private akka.remote.SystemMessageFormats.WatchData watchData_;
    /**
     * <code>optional .WatchData watchData = 2;</code>
     */
    public boolean hasWatchData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .WatchData watchData = 2;</code>
     */
    public akka.remote.SystemMessageFormats.WatchData getWatchData() {
      return watchData_;
    }
    /**
     * <code>optional .WatchData watchData = 2;</code>
     */
    public akka.remote.SystemMessageFormats.WatchDataOrBuilder getWatchDataOrBuilder() {
      return watchData_;
    }

    // optional .Payload causeData = 3;
    public static final int CAUSEDATA_FIELD_NUMBER = 3;
    private akka.remote.ContainerFormats.Payload causeData_;
    /**
     * <code>optional .Payload causeData = 3;</code>
     */
    public boolean hasCauseData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Payload causeData = 3;</code>
     */
    public akka.remote.ContainerFormats.Payload getCauseData() {
      return causeData_;
    }
    /**
     * <code>optional .Payload causeData = 3;</code>
     */
    public akka.remote.ContainerFormats.PayloadOrBuilder getCauseDataOrBuilder() {
      return causeData_;
    }

    // optional .SuperviseData superviseData = 5;
    public static final int SUPERVISEDATA_FIELD_NUMBER = 5;
    private akka.remote.SystemMessageFormats.SuperviseData superviseData_;
    /**
     * <code>optional .SuperviseData superviseData = 5;</code>
     */
    public boolean hasSuperviseData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .SuperviseData superviseData = 5;</code>
     */
    public akka.remote.SystemMessageFormats.SuperviseData getSuperviseData() {
      return superviseData_;
    }
    /**
     * <code>optional .SuperviseData superviseData = 5;</code>
     */
    public akka.remote.SystemMessageFormats.SuperviseDataOrBuilder getSuperviseDataOrBuilder() {
      return superviseData_;
    }

    // optional .FailedData failedData = 6;
    public static final int FAILEDDATA_FIELD_NUMBER = 6;
    private akka.remote.SystemMessageFormats.FailedData failedData_;
    /**
     * <code>optional .FailedData failedData = 6;</code>
     */
    public boolean hasFailedData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .FailedData failedData = 6;</code>
     */
    public akka.remote.SystemMessageFormats.FailedData getFailedData() {
      return failedData_;
    }
    /**
     * <code>optional .FailedData failedData = 6;</code>
     */
    public akka.remote.SystemMessageFormats.FailedDataOrBuilder getFailedDataOrBuilder() {
      return failedData_;
    }

    // optional .DeathWatchNotificationData dwNotificationData = 7;
    public static final int DWNOTIFICATIONDATA_FIELD_NUMBER = 7;
    private akka.remote.SystemMessageFormats.DeathWatchNotificationData dwNotificationData_;
    /**
     * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
     */
    public boolean hasDwNotificationData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
     */
    public akka.remote.SystemMessageFormats.DeathWatchNotificationData getDwNotificationData() {
      return dwNotificationData_;
    }
    /**
     * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
     */
    public akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder getDwNotificationDataOrBuilder() {
      return dwNotificationData_;
    }

    private void initFields() {
      type_ = akka.remote.SystemMessageFormats.SystemMessage.Type.CREATE;
      watchData_ = akka.remote.SystemMessageFormats.WatchData.getDefaultInstance();
      causeData_ = akka.remote.ContainerFormats.Payload.getDefaultInstance();
      superviseData_ = akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance();
      failedData_ = akka.remote.SystemMessageFormats.FailedData.getDefaultInstance();
      dwNotificationData_ = akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasWatchData()) {
        if (!getWatchData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCauseData()) {
        if (!getCauseData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSuperviseData()) {
        if (!getSuperviseData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFailedData()) {
        if (!getFailedData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDwNotificationData()) {
        if (!getDwNotificationData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, watchData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, causeData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, superviseData_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, failedData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, dwNotificationData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(2, watchData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(3, causeData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(5, superviseData_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(6, failedData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(7, dwNotificationData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.SystemMessage parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.SystemMessageFormats.SystemMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SystemMessage}
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.SystemMessageFormats.SystemMessageOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.SystemMessageFormats.internal_static_SystemMessage_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.SystemMessageFormats.internal_static_SystemMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.remote.SystemMessageFormats.SystemMessage.class, akka.remote.SystemMessageFormats.SystemMessage.Builder.class);
      }

      // Construct using akka.remote.SystemMessageFormats.SystemMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWatchDataFieldBuilder();
          getCauseDataFieldBuilder();
          getSuperviseDataFieldBuilder();
          getFailedDataFieldBuilder();
          getDwNotificationDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = akka.remote.SystemMessageFormats.SystemMessage.Type.CREATE;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (watchDataBuilder_ == null) {
          watchData_ = akka.remote.SystemMessageFormats.WatchData.getDefaultInstance();
        } else {
          watchDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (causeDataBuilder_ == null) {
          causeData_ = akka.remote.ContainerFormats.Payload.getDefaultInstance();
        } else {
          causeDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (superviseDataBuilder_ == null) {
          superviseData_ = akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance();
        } else {
          superviseDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (failedDataBuilder_ == null) {
          failedData_ = akka.remote.SystemMessageFormats.FailedData.getDefaultInstance();
        } else {
          failedDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (dwNotificationDataBuilder_ == null) {
          dwNotificationData_ = akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance();
        } else {
          dwNotificationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.SystemMessageFormats.internal_static_SystemMessage_descriptor;
      }

      public akka.remote.SystemMessageFormats.SystemMessage getDefaultInstanceForType() {
        return akka.remote.SystemMessageFormats.SystemMessage.getDefaultInstance();
      }

      public akka.remote.SystemMessageFormats.SystemMessage build() {
        akka.remote.SystemMessageFormats.SystemMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.remote.SystemMessageFormats.SystemMessage buildPartial() {
        akka.remote.SystemMessageFormats.SystemMessage result = new akka.remote.SystemMessageFormats.SystemMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (watchDataBuilder_ == null) {
          result.watchData_ = watchData_;
        } else {
          result.watchData_ = watchDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (causeDataBuilder_ == null) {
          result.causeData_ = causeData_;
        } else {
          result.causeData_ = causeDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (superviseDataBuilder_ == null) {
          result.superviseData_ = superviseData_;
        } else {
          result.superviseData_ = superviseDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (failedDataBuilder_ == null) {
          result.failedData_ = failedData_;
        } else {
          result.failedData_ = failedDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (dwNotificationDataBuilder_ == null) {
          result.dwNotificationData_ = dwNotificationData_;
        } else {
          result.dwNotificationData_ = dwNotificationDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof akka.remote.SystemMessageFormats.SystemMessage) {
          return mergeFrom((akka.remote.SystemMessageFormats.SystemMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.remote.SystemMessageFormats.SystemMessage other) {
        if (other == akka.remote.SystemMessageFormats.SystemMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasWatchData()) {
          mergeWatchData(other.getWatchData());
        }
        if (other.hasCauseData()) {
          mergeCauseData(other.getCauseData());
        }
        if (other.hasSuperviseData()) {
          mergeSuperviseData(other.getSuperviseData());
        }
        if (other.hasFailedData()) {
          mergeFailedData(other.getFailedData());
        }
        if (other.hasDwNotificationData()) {
          mergeDwNotificationData(other.getDwNotificationData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasWatchData()) {
          if (!getWatchData().isInitialized()) {
            
            return false;
          }
        }
        if (hasCauseData()) {
          if (!getCauseData().isInitialized()) {
            
            return false;
          }
        }
        if (hasSuperviseData()) {
          if (!getSuperviseData().isInitialized()) {
            
            return false;
          }
        }
        if (hasFailedData()) {
          if (!getFailedData().isInitialized()) {
            
            return false;
          }
        }
        if (hasDwNotificationData()) {
          if (!getDwNotificationData().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.remote.SystemMessageFormats.SystemMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.remote.SystemMessageFormats.SystemMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .SystemMessage.Type type = 1;
      private akka.remote.SystemMessageFormats.SystemMessage.Type type_ = akka.remote.SystemMessageFormats.SystemMessage.Type.CREATE;
      /**
       * <code>required .SystemMessage.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .SystemMessage.Type type = 1;</code>
       */
      public akka.remote.SystemMessageFormats.SystemMessage.Type getType() {
        return type_;
      }
      /**
       * <code>required .SystemMessage.Type type = 1;</code>
       */
      public Builder setType(akka.remote.SystemMessageFormats.SystemMessage.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .SystemMessage.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = akka.remote.SystemMessageFormats.SystemMessage.Type.CREATE;
        onChanged();
        return this;
      }

      // optional .WatchData watchData = 2;
      private akka.remote.SystemMessageFormats.WatchData watchData_ = akka.remote.SystemMessageFormats.WatchData.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.WatchData, akka.remote.SystemMessageFormats.WatchData.Builder, akka.remote.SystemMessageFormats.WatchDataOrBuilder> watchDataBuilder_;
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public boolean hasWatchData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public akka.remote.SystemMessageFormats.WatchData getWatchData() {
        if (watchDataBuilder_ == null) {
          return watchData_;
        } else {
          return watchDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public Builder setWatchData(akka.remote.SystemMessageFormats.WatchData value) {
        if (watchDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          watchData_ = value;
          onChanged();
        } else {
          watchDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public Builder setWatchData(
          akka.remote.SystemMessageFormats.WatchData.Builder builderForValue) {
        if (watchDataBuilder_ == null) {
          watchData_ = builderForValue.build();
          onChanged();
        } else {
          watchDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public Builder mergeWatchData(akka.remote.SystemMessageFormats.WatchData value) {
        if (watchDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              watchData_ != akka.remote.SystemMessageFormats.WatchData.getDefaultInstance()) {
            watchData_ =
              akka.remote.SystemMessageFormats.WatchData.newBuilder(watchData_).mergeFrom(value).buildPartial();
          } else {
            watchData_ = value;
          }
          onChanged();
        } else {
          watchDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public Builder clearWatchData() {
        if (watchDataBuilder_ == null) {
          watchData_ = akka.remote.SystemMessageFormats.WatchData.getDefaultInstance();
          onChanged();
        } else {
          watchDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public akka.remote.SystemMessageFormats.WatchData.Builder getWatchDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWatchDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      public akka.remote.SystemMessageFormats.WatchDataOrBuilder getWatchDataOrBuilder() {
        if (watchDataBuilder_ != null) {
          return watchDataBuilder_.getMessageOrBuilder();
        } else {
          return watchData_;
        }
      }
      /**
       * <code>optional .WatchData watchData = 2;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.WatchData, akka.remote.SystemMessageFormats.WatchData.Builder, akka.remote.SystemMessageFormats.WatchDataOrBuilder> 
          getWatchDataFieldBuilder() {
        if (watchDataBuilder_ == null) {
          watchDataBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.SystemMessageFormats.WatchData, akka.remote.SystemMessageFormats.WatchData.Builder, akka.remote.SystemMessageFormats.WatchDataOrBuilder>(
                  watchData_,
                  getParentForChildren(),
                  isClean());
          watchData_ = null;
        }
        return watchDataBuilder_;
      }

      // optional .Payload causeData = 3;
      private akka.remote.ContainerFormats.Payload causeData_ = akka.remote.ContainerFormats.Payload.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.Payload, akka.remote.ContainerFormats.Payload.Builder, akka.remote.ContainerFormats.PayloadOrBuilder> causeDataBuilder_;
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public boolean hasCauseData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public akka.remote.ContainerFormats.Payload getCauseData() {
        if (causeDataBuilder_ == null) {
          return causeData_;
        } else {
          return causeDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public Builder setCauseData(akka.remote.ContainerFormats.Payload value) {
        if (causeDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          causeData_ = value;
          onChanged();
        } else {
          causeDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public Builder setCauseData(
          akka.remote.ContainerFormats.Payload.Builder builderForValue) {
        if (causeDataBuilder_ == null) {
          causeData_ = builderForValue.build();
          onChanged();
        } else {
          causeDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public Builder mergeCauseData(akka.remote.ContainerFormats.Payload value) {
        if (causeDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              causeData_ != akka.remote.ContainerFormats.Payload.getDefaultInstance()) {
            causeData_ =
              akka.remote.ContainerFormats.Payload.newBuilder(causeData_).mergeFrom(value).buildPartial();
          } else {
            causeData_ = value;
          }
          onChanged();
        } else {
          causeDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public Builder clearCauseData() {
        if (causeDataBuilder_ == null) {
          causeData_ = akka.remote.ContainerFormats.Payload.getDefaultInstance();
          onChanged();
        } else {
          causeDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public akka.remote.ContainerFormats.Payload.Builder getCauseDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCauseDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      public akka.remote.ContainerFormats.PayloadOrBuilder getCauseDataOrBuilder() {
        if (causeDataBuilder_ != null) {
          return causeDataBuilder_.getMessageOrBuilder();
        } else {
          return causeData_;
        }
      }
      /**
       * <code>optional .Payload causeData = 3;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.Payload, akka.remote.ContainerFormats.Payload.Builder, akka.remote.ContainerFormats.PayloadOrBuilder> 
          getCauseDataFieldBuilder() {
        if (causeDataBuilder_ == null) {
          causeDataBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.ContainerFormats.Payload, akka.remote.ContainerFormats.Payload.Builder, akka.remote.ContainerFormats.PayloadOrBuilder>(
                  causeData_,
                  getParentForChildren(),
                  isClean());
          causeData_ = null;
        }
        return causeDataBuilder_;
      }

      // optional .SuperviseData superviseData = 5;
      private akka.remote.SystemMessageFormats.SuperviseData superviseData_ = akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.SuperviseData, akka.remote.SystemMessageFormats.SuperviseData.Builder, akka.remote.SystemMessageFormats.SuperviseDataOrBuilder> superviseDataBuilder_;
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public boolean hasSuperviseData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public akka.remote.SystemMessageFormats.SuperviseData getSuperviseData() {
        if (superviseDataBuilder_ == null) {
          return superviseData_;
        } else {
          return superviseDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public Builder setSuperviseData(akka.remote.SystemMessageFormats.SuperviseData value) {
        if (superviseDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          superviseData_ = value;
          onChanged();
        } else {
          superviseDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public Builder setSuperviseData(
          akka.remote.SystemMessageFormats.SuperviseData.Builder builderForValue) {
        if (superviseDataBuilder_ == null) {
          superviseData_ = builderForValue.build();
          onChanged();
        } else {
          superviseDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public Builder mergeSuperviseData(akka.remote.SystemMessageFormats.SuperviseData value) {
        if (superviseDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              superviseData_ != akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance()) {
            superviseData_ =
              akka.remote.SystemMessageFormats.SuperviseData.newBuilder(superviseData_).mergeFrom(value).buildPartial();
          } else {
            superviseData_ = value;
          }
          onChanged();
        } else {
          superviseDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public Builder clearSuperviseData() {
        if (superviseDataBuilder_ == null) {
          superviseData_ = akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance();
          onChanged();
        } else {
          superviseDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public akka.remote.SystemMessageFormats.SuperviseData.Builder getSuperviseDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSuperviseDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      public akka.remote.SystemMessageFormats.SuperviseDataOrBuilder getSuperviseDataOrBuilder() {
        if (superviseDataBuilder_ != null) {
          return superviseDataBuilder_.getMessageOrBuilder();
        } else {
          return superviseData_;
        }
      }
      /**
       * <code>optional .SuperviseData superviseData = 5;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.SuperviseData, akka.remote.SystemMessageFormats.SuperviseData.Builder, akka.remote.SystemMessageFormats.SuperviseDataOrBuilder> 
          getSuperviseDataFieldBuilder() {
        if (superviseDataBuilder_ == null) {
          superviseDataBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.SystemMessageFormats.SuperviseData, akka.remote.SystemMessageFormats.SuperviseData.Builder, akka.remote.SystemMessageFormats.SuperviseDataOrBuilder>(
                  superviseData_,
                  getParentForChildren(),
                  isClean());
          superviseData_ = null;
        }
        return superviseDataBuilder_;
      }

      // optional .FailedData failedData = 6;
      private akka.remote.SystemMessageFormats.FailedData failedData_ = akka.remote.SystemMessageFormats.FailedData.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.FailedData, akka.remote.SystemMessageFormats.FailedData.Builder, akka.remote.SystemMessageFormats.FailedDataOrBuilder> failedDataBuilder_;
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public boolean hasFailedData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public akka.remote.SystemMessageFormats.FailedData getFailedData() {
        if (failedDataBuilder_ == null) {
          return failedData_;
        } else {
          return failedDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public Builder setFailedData(akka.remote.SystemMessageFormats.FailedData value) {
        if (failedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          failedData_ = value;
          onChanged();
        } else {
          failedDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public Builder setFailedData(
          akka.remote.SystemMessageFormats.FailedData.Builder builderForValue) {
        if (failedDataBuilder_ == null) {
          failedData_ = builderForValue.build();
          onChanged();
        } else {
          failedDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public Builder mergeFailedData(akka.remote.SystemMessageFormats.FailedData value) {
        if (failedDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              failedData_ != akka.remote.SystemMessageFormats.FailedData.getDefaultInstance()) {
            failedData_ =
              akka.remote.SystemMessageFormats.FailedData.newBuilder(failedData_).mergeFrom(value).buildPartial();
          } else {
            failedData_ = value;
          }
          onChanged();
        } else {
          failedDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public Builder clearFailedData() {
        if (failedDataBuilder_ == null) {
          failedData_ = akka.remote.SystemMessageFormats.FailedData.getDefaultInstance();
          onChanged();
        } else {
          failedDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public akka.remote.SystemMessageFormats.FailedData.Builder getFailedDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFailedDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      public akka.remote.SystemMessageFormats.FailedDataOrBuilder getFailedDataOrBuilder() {
        if (failedDataBuilder_ != null) {
          return failedDataBuilder_.getMessageOrBuilder();
        } else {
          return failedData_;
        }
      }
      /**
       * <code>optional .FailedData failedData = 6;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.FailedData, akka.remote.SystemMessageFormats.FailedData.Builder, akka.remote.SystemMessageFormats.FailedDataOrBuilder> 
          getFailedDataFieldBuilder() {
        if (failedDataBuilder_ == null) {
          failedDataBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.SystemMessageFormats.FailedData, akka.remote.SystemMessageFormats.FailedData.Builder, akka.remote.SystemMessageFormats.FailedDataOrBuilder>(
                  failedData_,
                  getParentForChildren(),
                  isClean());
          failedData_ = null;
        }
        return failedDataBuilder_;
      }

      // optional .DeathWatchNotificationData dwNotificationData = 7;
      private akka.remote.SystemMessageFormats.DeathWatchNotificationData dwNotificationData_ = akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.DeathWatchNotificationData, akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder, akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder> dwNotificationDataBuilder_;
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public boolean hasDwNotificationData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public akka.remote.SystemMessageFormats.DeathWatchNotificationData getDwNotificationData() {
        if (dwNotificationDataBuilder_ == null) {
          return dwNotificationData_;
        } else {
          return dwNotificationDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public Builder setDwNotificationData(akka.remote.SystemMessageFormats.DeathWatchNotificationData value) {
        if (dwNotificationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dwNotificationData_ = value;
          onChanged();
        } else {
          dwNotificationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public Builder setDwNotificationData(
          akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder builderForValue) {
        if (dwNotificationDataBuilder_ == null) {
          dwNotificationData_ = builderForValue.build();
          onChanged();
        } else {
          dwNotificationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public Builder mergeDwNotificationData(akka.remote.SystemMessageFormats.DeathWatchNotificationData value) {
        if (dwNotificationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              dwNotificationData_ != akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance()) {
            dwNotificationData_ =
              akka.remote.SystemMessageFormats.DeathWatchNotificationData.newBuilder(dwNotificationData_).mergeFrom(value).buildPartial();
          } else {
            dwNotificationData_ = value;
          }
          onChanged();
        } else {
          dwNotificationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public Builder clearDwNotificationData() {
        if (dwNotificationDataBuilder_ == null) {
          dwNotificationData_ = akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance();
          onChanged();
        } else {
          dwNotificationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder getDwNotificationDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDwNotificationDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      public akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder getDwNotificationDataOrBuilder() {
        if (dwNotificationDataBuilder_ != null) {
          return dwNotificationDataBuilder_.getMessageOrBuilder();
        } else {
          return dwNotificationData_;
        }
      }
      /**
       * <code>optional .DeathWatchNotificationData dwNotificationData = 7;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.SystemMessageFormats.DeathWatchNotificationData, akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder, akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder> 
          getDwNotificationDataFieldBuilder() {
        if (dwNotificationDataBuilder_ == null) {
          dwNotificationDataBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.SystemMessageFormats.DeathWatchNotificationData, akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder, akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder>(
                  dwNotificationData_,
                  getParentForChildren(),
                  isClean());
          dwNotificationData_ = null;
        }
        return dwNotificationDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SystemMessage)
    }

    static {
      defaultInstance = new SystemMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SystemMessage)
  }

  public interface WatchDataOrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // required .ActorRef watchee = 1;
    /**
     * <code>required .ActorRef watchee = 1;</code>
     */
    boolean hasWatchee();
    /**
     * <code>required .ActorRef watchee = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRef getWatchee();
    /**
     * <code>required .ActorRef watchee = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRefOrBuilder getWatcheeOrBuilder();

    // required .ActorRef watcher = 2;
    /**
     * <code>required .ActorRef watcher = 2;</code>
     */
    boolean hasWatcher();
    /**
     * <code>required .ActorRef watcher = 2;</code>
     */
    akka.remote.ContainerFormats.ActorRef getWatcher();
    /**
     * <code>required .ActorRef watcher = 2;</code>
     */
    akka.remote.ContainerFormats.ActorRefOrBuilder getWatcherOrBuilder();
  }
  /**
   * Protobuf type {@code WatchData}
   */
  public static final class WatchData extends
      akka.protobuf.GeneratedMessage
      implements WatchDataOrBuilder {
    // Use WatchData.newBuilder() to construct.
    private WatchData(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WatchData(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WatchData defaultInstance;
    public static WatchData getDefaultInstance() {
      return defaultInstance;
    }

    public WatchData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WatchData(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              akka.remote.ContainerFormats.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = watchee_.toBuilder();
              }
              watchee_ = input.readMessage(akka.remote.ContainerFormats.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(watchee_);
                watchee_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              akka.remote.ContainerFormats.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = watcher_.toBuilder();
              }
              watcher_ = input.readMessage(akka.remote.ContainerFormats.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(watcher_);
                watcher_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.SystemMessageFormats.internal_static_WatchData_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.SystemMessageFormats.internal_static_WatchData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.remote.SystemMessageFormats.WatchData.class, akka.remote.SystemMessageFormats.WatchData.Builder.class);
    }

    public static akka.protobuf.Parser<WatchData> PARSER =
        new akka.protobuf.AbstractParser<WatchData>() {
      public WatchData parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new WatchData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<WatchData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ActorRef watchee = 1;
    public static final int WATCHEE_FIELD_NUMBER = 1;
    private akka.remote.ContainerFormats.ActorRef watchee_;
    /**
     * <code>required .ActorRef watchee = 1;</code>
     */
    public boolean hasWatchee() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ActorRef watchee = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRef getWatchee() {
      return watchee_;
    }
    /**
     * <code>required .ActorRef watchee = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRefOrBuilder getWatcheeOrBuilder() {
      return watchee_;
    }

    // required .ActorRef watcher = 2;
    public static final int WATCHER_FIELD_NUMBER = 2;
    private akka.remote.ContainerFormats.ActorRef watcher_;
    /**
     * <code>required .ActorRef watcher = 2;</code>
     */
    public boolean hasWatcher() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ActorRef watcher = 2;</code>
     */
    public akka.remote.ContainerFormats.ActorRef getWatcher() {
      return watcher_;
    }
    /**
     * <code>required .ActorRef watcher = 2;</code>
     */
    public akka.remote.ContainerFormats.ActorRefOrBuilder getWatcherOrBuilder() {
      return watcher_;
    }

    private void initFields() {
      watchee_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      watcher_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWatchee()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWatcher()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getWatchee().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getWatcher().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, watchee_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, watcher_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(1, watchee_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(2, watcher_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.remote.SystemMessageFormats.WatchData parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.WatchData parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.SystemMessageFormats.WatchData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WatchData}
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.SystemMessageFormats.WatchDataOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.SystemMessageFormats.internal_static_WatchData_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.SystemMessageFormats.internal_static_WatchData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.remote.SystemMessageFormats.WatchData.class, akka.remote.SystemMessageFormats.WatchData.Builder.class);
      }

      // Construct using akka.remote.SystemMessageFormats.WatchData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWatcheeFieldBuilder();
          getWatcherFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (watcheeBuilder_ == null) {
          watchee_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
        } else {
          watcheeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (watcherBuilder_ == null) {
          watcher_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
        } else {
          watcherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.SystemMessageFormats.internal_static_WatchData_descriptor;
      }

      public akka.remote.SystemMessageFormats.WatchData getDefaultInstanceForType() {
        return akka.remote.SystemMessageFormats.WatchData.getDefaultInstance();
      }

      public akka.remote.SystemMessageFormats.WatchData build() {
        akka.remote.SystemMessageFormats.WatchData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.remote.SystemMessageFormats.WatchData buildPartial() {
        akka.remote.SystemMessageFormats.WatchData result = new akka.remote.SystemMessageFormats.WatchData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (watcheeBuilder_ == null) {
          result.watchee_ = watchee_;
        } else {
          result.watchee_ = watcheeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (watcherBuilder_ == null) {
          result.watcher_ = watcher_;
        } else {
          result.watcher_ = watcherBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof akka.remote.SystemMessageFormats.WatchData) {
          return mergeFrom((akka.remote.SystemMessageFormats.WatchData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.remote.SystemMessageFormats.WatchData other) {
        if (other == akka.remote.SystemMessageFormats.WatchData.getDefaultInstance()) return this;
        if (other.hasWatchee()) {
          mergeWatchee(other.getWatchee());
        }
        if (other.hasWatcher()) {
          mergeWatcher(other.getWatcher());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWatchee()) {
          
          return false;
        }
        if (!hasWatcher()) {
          
          return false;
        }
        if (!getWatchee().isInitialized()) {
          
          return false;
        }
        if (!getWatcher().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.remote.SystemMessageFormats.WatchData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.remote.SystemMessageFormats.WatchData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ActorRef watchee = 1;
      private akka.remote.ContainerFormats.ActorRef watchee_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> watcheeBuilder_;
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public boolean hasWatchee() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef getWatchee() {
        if (watcheeBuilder_ == null) {
          return watchee_;
        } else {
          return watcheeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public Builder setWatchee(akka.remote.ContainerFormats.ActorRef value) {
        if (watcheeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          watchee_ = value;
          onChanged();
        } else {
          watcheeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public Builder setWatchee(
          akka.remote.ContainerFormats.ActorRef.Builder builderForValue) {
        if (watcheeBuilder_ == null) {
          watchee_ = builderForValue.build();
          onChanged();
        } else {
          watcheeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public Builder mergeWatchee(akka.remote.ContainerFormats.ActorRef value) {
        if (watcheeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              watchee_ != akka.remote.ContainerFormats.ActorRef.getDefaultInstance()) {
            watchee_ =
              akka.remote.ContainerFormats.ActorRef.newBuilder(watchee_).mergeFrom(value).buildPartial();
          } else {
            watchee_ = value;
          }
          onChanged();
        } else {
          watcheeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public Builder clearWatchee() {
        if (watcheeBuilder_ == null) {
          watchee_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
          onChanged();
        } else {
          watcheeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef.Builder getWatcheeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getWatcheeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRefOrBuilder getWatcheeOrBuilder() {
        if (watcheeBuilder_ != null) {
          return watcheeBuilder_.getMessageOrBuilder();
        } else {
          return watchee_;
        }
      }
      /**
       * <code>required .ActorRef watchee = 1;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> 
          getWatcheeFieldBuilder() {
        if (watcheeBuilder_ == null) {
          watcheeBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder>(
                  watchee_,
                  getParentForChildren(),
                  isClean());
          watchee_ = null;
        }
        return watcheeBuilder_;
      }

      // required .ActorRef watcher = 2;
      private akka.remote.ContainerFormats.ActorRef watcher_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> watcherBuilder_;
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public boolean hasWatcher() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public akka.remote.ContainerFormats.ActorRef getWatcher() {
        if (watcherBuilder_ == null) {
          return watcher_;
        } else {
          return watcherBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public Builder setWatcher(akka.remote.ContainerFormats.ActorRef value) {
        if (watcherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          watcher_ = value;
          onChanged();
        } else {
          watcherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public Builder setWatcher(
          akka.remote.ContainerFormats.ActorRef.Builder builderForValue) {
        if (watcherBuilder_ == null) {
          watcher_ = builderForValue.build();
          onChanged();
        } else {
          watcherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public Builder mergeWatcher(akka.remote.ContainerFormats.ActorRef value) {
        if (watcherBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              watcher_ != akka.remote.ContainerFormats.ActorRef.getDefaultInstance()) {
            watcher_ =
              akka.remote.ContainerFormats.ActorRef.newBuilder(watcher_).mergeFrom(value).buildPartial();
          } else {
            watcher_ = value;
          }
          onChanged();
        } else {
          watcherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public Builder clearWatcher() {
        if (watcherBuilder_ == null) {
          watcher_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
          onChanged();
        } else {
          watcherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public akka.remote.ContainerFormats.ActorRef.Builder getWatcherBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWatcherFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      public akka.remote.ContainerFormats.ActorRefOrBuilder getWatcherOrBuilder() {
        if (watcherBuilder_ != null) {
          return watcherBuilder_.getMessageOrBuilder();
        } else {
          return watcher_;
        }
      }
      /**
       * <code>required .ActorRef watcher = 2;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> 
          getWatcherFieldBuilder() {
        if (watcherBuilder_ == null) {
          watcherBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder>(
                  watcher_,
                  getParentForChildren(),
                  isClean());
          watcher_ = null;
        }
        return watcherBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:WatchData)
    }

    static {
      defaultInstance = new WatchData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WatchData)
  }

  public interface SuperviseDataOrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // required .ActorRef child = 1;
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    boolean hasChild();
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRef getChild();
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRefOrBuilder getChildOrBuilder();

    // required bool async = 2;
    /**
     * <code>required bool async = 2;</code>
     */
    boolean hasAsync();
    /**
     * <code>required bool async = 2;</code>
     */
    boolean getAsync();
  }
  /**
   * Protobuf type {@code SuperviseData}
   */
  public static final class SuperviseData extends
      akka.protobuf.GeneratedMessage
      implements SuperviseDataOrBuilder {
    // Use SuperviseData.newBuilder() to construct.
    private SuperviseData(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SuperviseData(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SuperviseData defaultInstance;
    public static SuperviseData getDefaultInstance() {
      return defaultInstance;
    }

    public SuperviseData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SuperviseData(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              akka.remote.ContainerFormats.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = child_.toBuilder();
              }
              child_ = input.readMessage(akka.remote.ContainerFormats.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(child_);
                child_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              async_ = input.readBool();
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.SystemMessageFormats.internal_static_SuperviseData_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.SystemMessageFormats.internal_static_SuperviseData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.remote.SystemMessageFormats.SuperviseData.class, akka.remote.SystemMessageFormats.SuperviseData.Builder.class);
    }

    public static akka.protobuf.Parser<SuperviseData> PARSER =
        new akka.protobuf.AbstractParser<SuperviseData>() {
      public SuperviseData parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new SuperviseData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<SuperviseData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ActorRef child = 1;
    public static final int CHILD_FIELD_NUMBER = 1;
    private akka.remote.ContainerFormats.ActorRef child_;
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    public boolean hasChild() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRef getChild() {
      return child_;
    }
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRefOrBuilder getChildOrBuilder() {
      return child_;
    }

    // required bool async = 2;
    public static final int ASYNC_FIELD_NUMBER = 2;
    private boolean async_;
    /**
     * <code>required bool async = 2;</code>
     */
    public boolean hasAsync() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool async = 2;</code>
     */
    public boolean getAsync() {
      return async_;
    }

    private void initFields() {
      child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      async_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChild()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAsync()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getChild().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, child_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, async_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(1, child_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream
          .computeBoolSize(2, async_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.SuperviseData parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.SystemMessageFormats.SuperviseData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SuperviseData}
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.SystemMessageFormats.SuperviseDataOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.SystemMessageFormats.internal_static_SuperviseData_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.SystemMessageFormats.internal_static_SuperviseData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.remote.SystemMessageFormats.SuperviseData.class, akka.remote.SystemMessageFormats.SuperviseData.Builder.class);
      }

      // Construct using akka.remote.SystemMessageFormats.SuperviseData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChildFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (childBuilder_ == null) {
          child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
        } else {
          childBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        async_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.SystemMessageFormats.internal_static_SuperviseData_descriptor;
      }

      public akka.remote.SystemMessageFormats.SuperviseData getDefaultInstanceForType() {
        return akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance();
      }

      public akka.remote.SystemMessageFormats.SuperviseData build() {
        akka.remote.SystemMessageFormats.SuperviseData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.remote.SystemMessageFormats.SuperviseData buildPartial() {
        akka.remote.SystemMessageFormats.SuperviseData result = new akka.remote.SystemMessageFormats.SuperviseData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (childBuilder_ == null) {
          result.child_ = child_;
        } else {
          result.child_ = childBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.async_ = async_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof akka.remote.SystemMessageFormats.SuperviseData) {
          return mergeFrom((akka.remote.SystemMessageFormats.SuperviseData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.remote.SystemMessageFormats.SuperviseData other) {
        if (other == akka.remote.SystemMessageFormats.SuperviseData.getDefaultInstance()) return this;
        if (other.hasChild()) {
          mergeChild(other.getChild());
        }
        if (other.hasAsync()) {
          setAsync(other.getAsync());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChild()) {
          
          return false;
        }
        if (!hasAsync()) {
          
          return false;
        }
        if (!getChild().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.remote.SystemMessageFormats.SuperviseData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.remote.SystemMessageFormats.SuperviseData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ActorRef child = 1;
      private akka.remote.ContainerFormats.ActorRef child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> childBuilder_;
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public boolean hasChild() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef getChild() {
        if (childBuilder_ == null) {
          return child_;
        } else {
          return childBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder setChild(akka.remote.ContainerFormats.ActorRef value) {
        if (childBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          child_ = value;
          onChanged();
        } else {
          childBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder setChild(
          akka.remote.ContainerFormats.ActorRef.Builder builderForValue) {
        if (childBuilder_ == null) {
          child_ = builderForValue.build();
          onChanged();
        } else {
          childBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder mergeChild(akka.remote.ContainerFormats.ActorRef value) {
        if (childBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              child_ != akka.remote.ContainerFormats.ActorRef.getDefaultInstance()) {
            child_ =
              akka.remote.ContainerFormats.ActorRef.newBuilder(child_).mergeFrom(value).buildPartial();
          } else {
            child_ = value;
          }
          onChanged();
        } else {
          childBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder clearChild() {
        if (childBuilder_ == null) {
          child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
          onChanged();
        } else {
          childBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef.Builder getChildBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getChildFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRefOrBuilder getChildOrBuilder() {
        if (childBuilder_ != null) {
          return childBuilder_.getMessageOrBuilder();
        } else {
          return child_;
        }
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> 
          getChildFieldBuilder() {
        if (childBuilder_ == null) {
          childBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder>(
                  child_,
                  getParentForChildren(),
                  isClean());
          child_ = null;
        }
        return childBuilder_;
      }

      // required bool async = 2;
      private boolean async_ ;
      /**
       * <code>required bool async = 2;</code>
       */
      public boolean hasAsync() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool async = 2;</code>
       */
      public boolean getAsync() {
        return async_;
      }
      /**
       * <code>required bool async = 2;</code>
       */
      public Builder setAsync(boolean value) {
        bitField0_ |= 0x00000002;
        async_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool async = 2;</code>
       */
      public Builder clearAsync() {
        bitField0_ = (bitField0_ & ~0x00000002);
        async_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SuperviseData)
    }

    static {
      defaultInstance = new SuperviseData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SuperviseData)
  }

  public interface FailedDataOrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // required .ActorRef child = 1;
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    boolean hasChild();
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRef getChild();
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRefOrBuilder getChildOrBuilder();

    // required uint64 uid = 2;
    /**
     * <code>required uint64 uid = 2;</code>
     */
    boolean hasUid();
    /**
     * <code>required uint64 uid = 2;</code>
     */
    long getUid();
  }
  /**
   * Protobuf type {@code FailedData}
   */
  public static final class FailedData extends
      akka.protobuf.GeneratedMessage
      implements FailedDataOrBuilder {
    // Use FailedData.newBuilder() to construct.
    private FailedData(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FailedData(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FailedData defaultInstance;
    public static FailedData getDefaultInstance() {
      return defaultInstance;
    }

    public FailedData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FailedData(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              akka.remote.ContainerFormats.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = child_.toBuilder();
              }
              child_ = input.readMessage(akka.remote.ContainerFormats.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(child_);
                child_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uid_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.SystemMessageFormats.internal_static_FailedData_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.SystemMessageFormats.internal_static_FailedData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.remote.SystemMessageFormats.FailedData.class, akka.remote.SystemMessageFormats.FailedData.Builder.class);
    }

    public static akka.protobuf.Parser<FailedData> PARSER =
        new akka.protobuf.AbstractParser<FailedData>() {
      public FailedData parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new FailedData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<FailedData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ActorRef child = 1;
    public static final int CHILD_FIELD_NUMBER = 1;
    private akka.remote.ContainerFormats.ActorRef child_;
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    public boolean hasChild() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRef getChild() {
      return child_;
    }
    /**
     * <code>required .ActorRef child = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRefOrBuilder getChildOrBuilder() {
      return child_;
    }

    // required uint64 uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private long uid_;
    /**
     * <code>required uint64 uid = 2;</code>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 uid = 2;</code>
     */
    public long getUid() {
      return uid_;
    }

    private void initFields() {
      child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      uid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChild()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getChild().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, child_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, uid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(1, child_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream
          .computeUInt64Size(2, uid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.remote.SystemMessageFormats.FailedData parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.FailedData parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.SystemMessageFormats.FailedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FailedData}
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.SystemMessageFormats.FailedDataOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.SystemMessageFormats.internal_static_FailedData_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.SystemMessageFormats.internal_static_FailedData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.remote.SystemMessageFormats.FailedData.class, akka.remote.SystemMessageFormats.FailedData.Builder.class);
      }

      // Construct using akka.remote.SystemMessageFormats.FailedData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChildFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (childBuilder_ == null) {
          child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
        } else {
          childBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.SystemMessageFormats.internal_static_FailedData_descriptor;
      }

      public akka.remote.SystemMessageFormats.FailedData getDefaultInstanceForType() {
        return akka.remote.SystemMessageFormats.FailedData.getDefaultInstance();
      }

      public akka.remote.SystemMessageFormats.FailedData build() {
        akka.remote.SystemMessageFormats.FailedData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.remote.SystemMessageFormats.FailedData buildPartial() {
        akka.remote.SystemMessageFormats.FailedData result = new akka.remote.SystemMessageFormats.FailedData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (childBuilder_ == null) {
          result.child_ = child_;
        } else {
          result.child_ = childBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uid_ = uid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof akka.remote.SystemMessageFormats.FailedData) {
          return mergeFrom((akka.remote.SystemMessageFormats.FailedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.remote.SystemMessageFormats.FailedData other) {
        if (other == akka.remote.SystemMessageFormats.FailedData.getDefaultInstance()) return this;
        if (other.hasChild()) {
          mergeChild(other.getChild());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChild()) {
          
          return false;
        }
        if (!hasUid()) {
          
          return false;
        }
        if (!getChild().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.remote.SystemMessageFormats.FailedData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.remote.SystemMessageFormats.FailedData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ActorRef child = 1;
      private akka.remote.ContainerFormats.ActorRef child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> childBuilder_;
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public boolean hasChild() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef getChild() {
        if (childBuilder_ == null) {
          return child_;
        } else {
          return childBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder setChild(akka.remote.ContainerFormats.ActorRef value) {
        if (childBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          child_ = value;
          onChanged();
        } else {
          childBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder setChild(
          akka.remote.ContainerFormats.ActorRef.Builder builderForValue) {
        if (childBuilder_ == null) {
          child_ = builderForValue.build();
          onChanged();
        } else {
          childBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder mergeChild(akka.remote.ContainerFormats.ActorRef value) {
        if (childBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              child_ != akka.remote.ContainerFormats.ActorRef.getDefaultInstance()) {
            child_ =
              akka.remote.ContainerFormats.ActorRef.newBuilder(child_).mergeFrom(value).buildPartial();
          } else {
            child_ = value;
          }
          onChanged();
        } else {
          childBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public Builder clearChild() {
        if (childBuilder_ == null) {
          child_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
          onChanged();
        } else {
          childBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef.Builder getChildBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getChildFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRefOrBuilder getChildOrBuilder() {
        if (childBuilder_ != null) {
          return childBuilder_.getMessageOrBuilder();
        } else {
          return child_;
        }
      }
      /**
       * <code>required .ActorRef child = 1;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> 
          getChildFieldBuilder() {
        if (childBuilder_ == null) {
          childBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder>(
                  child_,
                  getParentForChildren(),
                  isClean());
          child_ = null;
        }
        return childBuilder_;
      }

      // required uint64 uid = 2;
      private long uid_ ;
      /**
       * <code>required uint64 uid = 2;</code>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 uid = 2;</code>
       */
      public long getUid() {
        return uid_;
      }
      /**
       * <code>required uint64 uid = 2;</code>
       */
      public Builder setUid(long value) {
        bitField0_ |= 0x00000002;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uid = 2;</code>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FailedData)
    }

    static {
      defaultInstance = new FailedData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FailedData)
  }

  public interface DeathWatchNotificationDataOrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // required .ActorRef actor = 1;
    /**
     * <code>required .ActorRef actor = 1;</code>
     */
    boolean hasActor();
    /**
     * <code>required .ActorRef actor = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRef getActor();
    /**
     * <code>required .ActorRef actor = 1;</code>
     */
    akka.remote.ContainerFormats.ActorRefOrBuilder getActorOrBuilder();

    // required bool existenceConfirmed = 2;
    /**
     * <code>required bool existenceConfirmed = 2;</code>
     */
    boolean hasExistenceConfirmed();
    /**
     * <code>required bool existenceConfirmed = 2;</code>
     */
    boolean getExistenceConfirmed();

    // required bool addressTerminated = 3;
    /**
     * <code>required bool addressTerminated = 3;</code>
     */
    boolean hasAddressTerminated();
    /**
     * <code>required bool addressTerminated = 3;</code>
     */
    boolean getAddressTerminated();
  }
  /**
   * Protobuf type {@code DeathWatchNotificationData}
   */
  public static final class DeathWatchNotificationData extends
      akka.protobuf.GeneratedMessage
      implements DeathWatchNotificationDataOrBuilder {
    // Use DeathWatchNotificationData.newBuilder() to construct.
    private DeathWatchNotificationData(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeathWatchNotificationData(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeathWatchNotificationData defaultInstance;
    public static DeathWatchNotificationData getDefaultInstance() {
      return defaultInstance;
    }

    public DeathWatchNotificationData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeathWatchNotificationData(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              akka.remote.ContainerFormats.ActorRef.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = actor_.toBuilder();
              }
              actor_ = input.readMessage(akka.remote.ContainerFormats.ActorRef.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actor_);
                actor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              existenceConfirmed_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              addressTerminated_ = input.readBool();
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.remote.SystemMessageFormats.internal_static_DeathWatchNotificationData_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.remote.SystemMessageFormats.internal_static_DeathWatchNotificationData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              akka.remote.SystemMessageFormats.DeathWatchNotificationData.class, akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder.class);
    }

    public static akka.protobuf.Parser<DeathWatchNotificationData> PARSER =
        new akka.protobuf.AbstractParser<DeathWatchNotificationData>() {
      public DeathWatchNotificationData parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new DeathWatchNotificationData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<DeathWatchNotificationData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ActorRef actor = 1;
    public static final int ACTOR_FIELD_NUMBER = 1;
    private akka.remote.ContainerFormats.ActorRef actor_;
    /**
     * <code>required .ActorRef actor = 1;</code>
     */
    public boolean hasActor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ActorRef actor = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRef getActor() {
      return actor_;
    }
    /**
     * <code>required .ActorRef actor = 1;</code>
     */
    public akka.remote.ContainerFormats.ActorRefOrBuilder getActorOrBuilder() {
      return actor_;
    }

    // required bool existenceConfirmed = 2;
    public static final int EXISTENCECONFIRMED_FIELD_NUMBER = 2;
    private boolean existenceConfirmed_;
    /**
     * <code>required bool existenceConfirmed = 2;</code>
     */
    public boolean hasExistenceConfirmed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool existenceConfirmed = 2;</code>
     */
    public boolean getExistenceConfirmed() {
      return existenceConfirmed_;
    }

    // required bool addressTerminated = 3;
    public static final int ADDRESSTERMINATED_FIELD_NUMBER = 3;
    private boolean addressTerminated_;
    /**
     * <code>required bool addressTerminated = 3;</code>
     */
    public boolean hasAddressTerminated() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool addressTerminated = 3;</code>
     */
    public boolean getAddressTerminated() {
      return addressTerminated_;
    }

    private void initFields() {
      actor_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      existenceConfirmed_ = false;
      addressTerminated_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasActor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExistenceConfirmed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAddressTerminated()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActor().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, actor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, existenceConfirmed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, addressTerminated_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream
          .computeMessageSize(1, actor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream
          .computeBoolSize(2, existenceConfirmed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += akka.protobuf.CodedOutputStream
          .computeBoolSize(3, addressTerminated_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static akka.remote.SystemMessageFormats.DeathWatchNotificationData parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.remote.SystemMessageFormats.DeathWatchNotificationData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeathWatchNotificationData}
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements akka.remote.SystemMessageFormats.DeathWatchNotificationDataOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return akka.remote.SystemMessageFormats.internal_static_DeathWatchNotificationData_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return akka.remote.SystemMessageFormats.internal_static_DeathWatchNotificationData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                akka.remote.SystemMessageFormats.DeathWatchNotificationData.class, akka.remote.SystemMessageFormats.DeathWatchNotificationData.Builder.class);
      }

      // Construct using akka.remote.SystemMessageFormats.DeathWatchNotificationData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (actorBuilder_ == null) {
          actor_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
        } else {
          actorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        existenceConfirmed_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        addressTerminated_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.remote.SystemMessageFormats.internal_static_DeathWatchNotificationData_descriptor;
      }

      public akka.remote.SystemMessageFormats.DeathWatchNotificationData getDefaultInstanceForType() {
        return akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance();
      }

      public akka.remote.SystemMessageFormats.DeathWatchNotificationData build() {
        akka.remote.SystemMessageFormats.DeathWatchNotificationData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public akka.remote.SystemMessageFormats.DeathWatchNotificationData buildPartial() {
        akka.remote.SystemMessageFormats.DeathWatchNotificationData result = new akka.remote.SystemMessageFormats.DeathWatchNotificationData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (actorBuilder_ == null) {
          result.actor_ = actor_;
        } else {
          result.actor_ = actorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.existenceConfirmed_ = existenceConfirmed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addressTerminated_ = addressTerminated_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof akka.remote.SystemMessageFormats.DeathWatchNotificationData) {
          return mergeFrom((akka.remote.SystemMessageFormats.DeathWatchNotificationData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.remote.SystemMessageFormats.DeathWatchNotificationData other) {
        if (other == akka.remote.SystemMessageFormats.DeathWatchNotificationData.getDefaultInstance()) return this;
        if (other.hasActor()) {
          mergeActor(other.getActor());
        }
        if (other.hasExistenceConfirmed()) {
          setExistenceConfirmed(other.getExistenceConfirmed());
        }
        if (other.hasAddressTerminated()) {
          setAddressTerminated(other.getAddressTerminated());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasActor()) {
          
          return false;
        }
        if (!hasExistenceConfirmed()) {
          
          return false;
        }
        if (!hasAddressTerminated()) {
          
          return false;
        }
        if (!getActor().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        akka.remote.SystemMessageFormats.DeathWatchNotificationData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (akka.remote.SystemMessageFormats.DeathWatchNotificationData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ActorRef actor = 1;
      private akka.remote.ContainerFormats.ActorRef actor_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> actorBuilder_;
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public boolean hasActor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef getActor() {
        if (actorBuilder_ == null) {
          return actor_;
        } else {
          return actorBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public Builder setActor(akka.remote.ContainerFormats.ActorRef value) {
        if (actorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actor_ = value;
          onChanged();
        } else {
          actorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public Builder setActor(
          akka.remote.ContainerFormats.ActorRef.Builder builderForValue) {
        if (actorBuilder_ == null) {
          actor_ = builderForValue.build();
          onChanged();
        } else {
          actorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public Builder mergeActor(akka.remote.ContainerFormats.ActorRef value) {
        if (actorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              actor_ != akka.remote.ContainerFormats.ActorRef.getDefaultInstance()) {
            actor_ =
              akka.remote.ContainerFormats.ActorRef.newBuilder(actor_).mergeFrom(value).buildPartial();
          } else {
            actor_ = value;
          }
          onChanged();
        } else {
          actorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public Builder clearActor() {
        if (actorBuilder_ == null) {
          actor_ = akka.remote.ContainerFormats.ActorRef.getDefaultInstance();
          onChanged();
        } else {
          actorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRef.Builder getActorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getActorFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      public akka.remote.ContainerFormats.ActorRefOrBuilder getActorOrBuilder() {
        if (actorBuilder_ != null) {
          return actorBuilder_.getMessageOrBuilder();
        } else {
          return actor_;
        }
      }
      /**
       * <code>required .ActorRef actor = 1;</code>
       */
      private akka.protobuf.SingleFieldBuilder<
          akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder> 
          getActorFieldBuilder() {
        if (actorBuilder_ == null) {
          actorBuilder_ = new akka.protobuf.SingleFieldBuilder<
              akka.remote.ContainerFormats.ActorRef, akka.remote.ContainerFormats.ActorRef.Builder, akka.remote.ContainerFormats.ActorRefOrBuilder>(
                  actor_,
                  getParentForChildren(),
                  isClean());
          actor_ = null;
        }
        return actorBuilder_;
      }

      // required bool existenceConfirmed = 2;
      private boolean existenceConfirmed_ ;
      /**
       * <code>required bool existenceConfirmed = 2;</code>
       */
      public boolean hasExistenceConfirmed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool existenceConfirmed = 2;</code>
       */
      public boolean getExistenceConfirmed() {
        return existenceConfirmed_;
      }
      /**
       * <code>required bool existenceConfirmed = 2;</code>
       */
      public Builder setExistenceConfirmed(boolean value) {
        bitField0_ |= 0x00000002;
        existenceConfirmed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool existenceConfirmed = 2;</code>
       */
      public Builder clearExistenceConfirmed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        existenceConfirmed_ = false;
        onChanged();
        return this;
      }

      // required bool addressTerminated = 3;
      private boolean addressTerminated_ ;
      /**
       * <code>required bool addressTerminated = 3;</code>
       */
      public boolean hasAddressTerminated() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool addressTerminated = 3;</code>
       */
      public boolean getAddressTerminated() {
        return addressTerminated_;
      }
      /**
       * <code>required bool addressTerminated = 3;</code>
       */
      public Builder setAddressTerminated(boolean value) {
        bitField0_ |= 0x00000004;
        addressTerminated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool addressTerminated = 3;</code>
       */
      public Builder clearAddressTerminated() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addressTerminated_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeathWatchNotificationData)
    }

    static {
      defaultInstance = new DeathWatchNotificationData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeathWatchNotificationData)
  }

  private static akka.protobuf.Descriptors.Descriptor
    internal_static_SystemMessage_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SystemMessage_fieldAccessorTable;
  private static akka.protobuf.Descriptors.Descriptor
    internal_static_WatchData_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WatchData_fieldAccessorTable;
  private static akka.protobuf.Descriptors.Descriptor
    internal_static_SuperviseData_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SuperviseData_fieldAccessorTable;
  private static akka.protobuf.Descriptors.Descriptor
    internal_static_FailedData_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FailedData_fieldAccessorTable;
  private static akka.protobuf.Descriptors.Descriptor
    internal_static_DeathWatchNotificationData_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeathWatchNotificationData_fieldAccessorTable;

  public static akka.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static akka.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032SystemMessageFormats.proto\032\026ContainerF" +
      "ormats.proto\"\212\003\n\rSystemMessage\022!\n\004type\030\001" +
      " \002(\0162\023.SystemMessage.Type\022\035\n\twatchData\030\002" +
      " \001(\0132\n.WatchData\022\033\n\tcauseData\030\003 \001(\0132\010.Pa" +
      "yload\022%\n\rsuperviseData\030\005 \001(\0132\016.Supervise" +
      "Data\022\037\n\nfailedData\030\006 \001(\0132\013.FailedData\0227\n" +
      "\022dwNotificationData\030\007 \001(\0132\033.DeathWatchNo" +
      "tificationData\"\230\001\n\004Type\022\n\n\006CREATE\020\000\022\014\n\010R" +
      "ECREATE\020\001\022\013\n\007SUSPEND\020\002\022\n\n\006RESUME\020\003\022\r\n\tTE" +
      "RMINATE\020\004\022\r\n\tSUPERVISE\020\005\022\t\n\005WATCH\020\006\022\013\n\007U",
      "NWATCH\020\007\022\n\n\006FAILED\020\010\022\033\n\027DEATHWATCH_NOTIF" +
      "ICATION\020\t\"C\n\tWatchData\022\032\n\007watchee\030\001 \002(\0132" +
      "\t.ActorRef\022\032\n\007watcher\030\002 \002(\0132\t.ActorRef\"8" +
      "\n\rSuperviseData\022\030\n\005child\030\001 \002(\0132\t.ActorRe" +
      "f\022\r\n\005async\030\002 \002(\010\"3\n\nFailedData\022\030\n\005child\030" +
      "\001 \002(\0132\t.ActorRef\022\013\n\003uid\030\002 \002(\004\"m\n\032DeathWa" +
      "tchNotificationData\022\030\n\005actor\030\001 \002(\0132\t.Act" +
      "orRef\022\032\n\022existenceConfirmed\030\002 \002(\010\022\031\n\021add" +
      "ressTerminated\030\003 \002(\010B\017\n\013akka.remoteH\001"
    };
    akka.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new akka.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public akka.protobuf.ExtensionRegistry assignDescriptors(
            akka.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SystemMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SystemMessage_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SystemMessage_descriptor,
              new java.lang.String[] { "Type", "WatchData", "CauseData", "SuperviseData", "FailedData", "DwNotificationData", });
          internal_static_WatchData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_WatchData_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WatchData_descriptor,
              new java.lang.String[] { "Watchee", "Watcher", });
          internal_static_SuperviseData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_SuperviseData_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SuperviseData_descriptor,
              new java.lang.String[] { "Child", "Async", });
          internal_static_FailedData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_FailedData_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FailedData_descriptor,
              new java.lang.String[] { "Child", "Uid", });
          internal_static_DeathWatchNotificationData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_DeathWatchNotificationData_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeathWatchNotificationData_descriptor,
              new java.lang.String[] { "Actor", "ExistenceConfirmed", "AddressTerminated", });
          return null;
        }
      };
    akka.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new akka.protobuf.Descriptors.FileDescriptor[] {
          akka.remote.ContainerFormats.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
