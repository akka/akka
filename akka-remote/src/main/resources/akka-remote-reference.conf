#####################################
# Akka Remote Reference Config File #
#####################################

# This the reference config file has all the default settings.
# Make your edits/overrides in your akka.conf.

akka {

  remote {
    # FIXME rename to transport
    layer = "akka.cluster.netty.NettyRemoteSupport"
    
    use-compression = off  

    secure-cookie = ""                            # Generate your own with '$AKKA_HOME/scripts/generate_config_with_secure_cookie.sh'
                                                  #     or using 'akka.util.Crypt.generateSecureCookie'

    remote-daemon-ack-timeout = 30s               # Timeout for ACK of cluster operations, lik checking actor out etc.

    use-passive-connections = on                  # Reuse inbound connections for outbound messages

    failure-detector {                            # accrual failure detection config
      threshold = 8                               # defines the failure detector threshold
                                                  #     A low threshold is prone to generate many wrong suspicions but ensures a
                                                  #     quick detection in the event of a real crash. Conversely, a high threshold
                                                  #     generates fewer mistakes but needs more time to detect actual crashes
      max-sample-size = 1000
    }

    server {
      hostname = ""                               # The hostname or ip to bind the remoting to, InetAddress.getLocalHost.getHostAddress is used if empty
      port = 2552                                 # The default remote server port clients should connect to. Default is 2552 (AKKA)
      message-frame-size = 1048576                # Increase this if you want to be able to send messages with large payloads
      connection-timeout = 120s                   # Timeout duration
      require-cookie = off                        # Should the remote server require that it peers share the same secure-cookie (defined in the 'remote' section)?
      untrusted-mode = off                        # Enable untrusted mode for full security of server managed actors, allows untrusted clients to connect.
      backlog = 4096                              # Sets the size of the connection backlog
    }

    client {
      buffering {
        retry-message-send-on-failure = off       # Should message buffering on remote client error be used (buffer flushed on successful reconnect)
        capacity = -1                             # If negative (or zero) then an unbounded mailbox is used (default)
                                                  #     If positive then a bounded mailbox is used and the capacity is set using the property
      }
      reconnect-delay = 5s
      read-timeout = 3600s
      message-frame-size = 1048576
      reconnection-time-window = 600s             # Maximum time window that a client should try to reconnect for
    }
  }
  
  // TODO cluster config will go into akka-cluster-reference.conf when we enable that module
  cluster {
    name = "test-cluster"
    nodename = ""
    zookeeper-server-addresses = "localhost:2181" # comma-separated list of '<hostname>:<port>' elements
    max-time-to-wait-until-connected = 30s
    session-timeout = 60s
    connection-timeout = 60s
    include-ref-node-in-replica-set = on          # Can a replica be instantiated on the same node as the cluster reference to the actor
                                                  #     Default: on
    log-directory = "_akka_cluster"               # Where ZooKeeper should store the logs and data files

    replication {
      digest-type = "MAC"                         # Options: CRC32 (cheap & unsafe), MAC (expensive & secure using password)
      password = "secret"                         # FIXME: store open in file?
      ensemble-size = 3
      quorum-size = 2
      snapshot-frequency = 1000                   # The number of messages that should be logged between every actor snapshot
      timeout = 30s                               # Timeout for asyncronous (write-behind) operations
    }
  }


}
