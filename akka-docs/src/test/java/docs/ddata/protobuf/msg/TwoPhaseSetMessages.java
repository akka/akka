// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TwoPhaseSetMessages.proto

package docs.ddata.protobuf.msg;

public final class TwoPhaseSetMessages {
  private TwoPhaseSetMessages() {}
  public static void registerAllExtensions(
      akka.protobuf.ExtensionRegistry registry) {
  }
  public interface TwoPhaseSetOrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // repeated string adds = 1;
    /**
     * <code>repeated string adds = 1;</code>
     */
    java.util.List<java.lang.String>
    getAddsList();
    /**
     * <code>repeated string adds = 1;</code>
     */
    int getAddsCount();
    /**
     * <code>repeated string adds = 1;</code>
     */
    java.lang.String getAdds(int index);
    /**
     * <code>repeated string adds = 1;</code>
     */
    akka.protobuf.ByteString
        getAddsBytes(int index);

    // repeated string removals = 2;
    /**
     * <code>repeated string removals = 2;</code>
     */
    java.util.List<java.lang.String>
    getRemovalsList();
    /**
     * <code>repeated string removals = 2;</code>
     */
    int getRemovalsCount();
    /**
     * <code>repeated string removals = 2;</code>
     */
    java.lang.String getRemovals(int index);
    /**
     * <code>repeated string removals = 2;</code>
     */
    akka.protobuf.ByteString
        getRemovalsBytes(int index);
  }
  /**
   * Protobuf type {@code docs.ddata.TwoPhaseSet}
   */
  public static final class TwoPhaseSet extends
      akka.protobuf.GeneratedMessage
      implements TwoPhaseSetOrBuilder {
    // Use TwoPhaseSet.newBuilder() to construct.
    private TwoPhaseSet(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TwoPhaseSet(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TwoPhaseSet defaultInstance;
    public static TwoPhaseSet getDefaultInstance() {
      return defaultInstance;
    }

    public TwoPhaseSet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TwoPhaseSet(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                adds_ = new akka.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              adds_.add(input.readBytes());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                removals_ = new akka.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              removals_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          adds_ = new akka.protobuf.UnmodifiableLazyStringList(adds_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          removals_ = new akka.protobuf.UnmodifiableLazyStringList(removals_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.class, docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.Builder.class);
    }

    public static akka.protobuf.Parser<TwoPhaseSet> PARSER =
        new akka.protobuf.AbstractParser<TwoPhaseSet>() {
      public TwoPhaseSet parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new TwoPhaseSet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<TwoPhaseSet> getParserForType() {
      return PARSER;
    }

    // repeated string adds = 1;
    public static final int ADDS_FIELD_NUMBER = 1;
    private akka.protobuf.LazyStringList adds_;
    /**
     * <code>repeated string adds = 1;</code>
     */
    public java.util.List<java.lang.String>
        getAddsList() {
      return adds_;
    }
    /**
     * <code>repeated string adds = 1;</code>
     */
    public int getAddsCount() {
      return adds_.size();
    }
    /**
     * <code>repeated string adds = 1;</code>
     */
    public java.lang.String getAdds(int index) {
      return adds_.get(index);
    }
    /**
     * <code>repeated string adds = 1;</code>
     */
    public akka.protobuf.ByteString
        getAddsBytes(int index) {
      return adds_.getByteString(index);
    }

    // repeated string removals = 2;
    public static final int REMOVALS_FIELD_NUMBER = 2;
    private akka.protobuf.LazyStringList removals_;
    /**
     * <code>repeated string removals = 2;</code>
     */
    public java.util.List<java.lang.String>
        getRemovalsList() {
      return removals_;
    }
    /**
     * <code>repeated string removals = 2;</code>
     */
    public int getRemovalsCount() {
      return removals_.size();
    }
    /**
     * <code>repeated string removals = 2;</code>
     */
    public java.lang.String getRemovals(int index) {
      return removals_.get(index);
    }
    /**
     * <code>repeated string removals = 2;</code>
     */
    public akka.protobuf.ByteString
        getRemovalsBytes(int index) {
      return removals_.getByteString(index);
    }

    private void initFields() {
      adds_ = akka.protobuf.LazyStringArrayList.EMPTY;
      removals_ = akka.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < adds_.size(); i++) {
        output.writeBytes(1, adds_.getByteString(i));
      }
      for (int i = 0; i < removals_.size(); i++) {
        output.writeBytes(2, removals_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < adds_.size(); i++) {
          dataSize += akka.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(adds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAddsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removals_.size(); i++) {
          dataSize += akka.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(removals_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRemovalsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code docs.ddata.TwoPhaseSet}
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSetOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.class, docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.Builder.class);
      }

      // Construct using docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        adds_ = akka.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        removals_ = akka.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet_descriptor;
      }

      public docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet getDefaultInstanceForType() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.getDefaultInstance();
      }

      public docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet build() {
        docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet buildPartial() {
        docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet result = new docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          adds_ = new akka.protobuf.UnmodifiableLazyStringList(
              adds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.adds_ = adds_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          removals_ = new akka.protobuf.UnmodifiableLazyStringList(
              removals_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.removals_ = removals_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet) {
          return mergeFrom((docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet other) {
        if (other == docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet.getDefaultInstance()) return this;
        if (!other.adds_.isEmpty()) {
          if (adds_.isEmpty()) {
            adds_ = other.adds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAddsIsMutable();
            adds_.addAll(other.adds_);
          }
          onChanged();
        }
        if (!other.removals_.isEmpty()) {
          if (removals_.isEmpty()) {
            removals_ = other.removals_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRemovalsIsMutable();
            removals_.addAll(other.removals_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated string adds = 1;
      private akka.protobuf.LazyStringList adds_ = akka.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAddsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          adds_ = new akka.protobuf.LazyStringArrayList(adds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public java.util.List<java.lang.String>
          getAddsList() {
        return java.util.Collections.unmodifiableList(adds_);
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public int getAddsCount() {
        return adds_.size();
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public java.lang.String getAdds(int index) {
        return adds_.get(index);
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public akka.protobuf.ByteString
          getAddsBytes(int index) {
        return adds_.getByteString(index);
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public Builder setAdds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddsIsMutable();
        adds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public Builder addAdds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddsIsMutable();
        adds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public Builder addAllAdds(
          java.lang.Iterable<java.lang.String> values) {
        ensureAddsIsMutable();
        super.addAll(values, adds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public Builder clearAdds() {
        adds_ = akka.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string adds = 1;</code>
       */
      public Builder addAddsBytes(
          akka.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAddsIsMutable();
        adds_.add(value);
        onChanged();
        return this;
      }

      // repeated string removals = 2;
      private akka.protobuf.LazyStringList removals_ = akka.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRemovalsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          removals_ = new akka.protobuf.LazyStringArrayList(removals_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public java.util.List<java.lang.String>
          getRemovalsList() {
        return java.util.Collections.unmodifiableList(removals_);
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public int getRemovalsCount() {
        return removals_.size();
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public java.lang.String getRemovals(int index) {
        return removals_.get(index);
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public akka.protobuf.ByteString
          getRemovalsBytes(int index) {
        return removals_.getByteString(index);
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public Builder setRemovals(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovalsIsMutable();
        removals_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public Builder addRemovals(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovalsIsMutable();
        removals_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public Builder addAllRemovals(
          java.lang.Iterable<java.lang.String> values) {
        ensureRemovalsIsMutable();
        super.addAll(values, removals_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public Builder clearRemovals() {
        removals_ = akka.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string removals = 2;</code>
       */
      public Builder addRemovalsBytes(
          akka.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovalsIsMutable();
        removals_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:docs.ddata.TwoPhaseSet)
    }

    static {
      defaultInstance = new TwoPhaseSet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:docs.ddata.TwoPhaseSet)
  }

  public interface TwoPhaseSet2OrBuilder
      extends akka.protobuf.MessageOrBuilder {

    // optional bytes adds = 1;
    /**
     * <code>optional bytes adds = 1;</code>
     */
    boolean hasAdds();
    /**
     * <code>optional bytes adds = 1;</code>
     */
    akka.protobuf.ByteString getAdds();

    // optional bytes removals = 2;
    /**
     * <code>optional bytes removals = 2;</code>
     */
    boolean hasRemovals();
    /**
     * <code>optional bytes removals = 2;</code>
     */
    akka.protobuf.ByteString getRemovals();
  }
  /**
   * Protobuf type {@code docs.ddata.TwoPhaseSet2}
   *
   * <pre>
   *#twophaseset2
   * </pre>
   */
  public static final class TwoPhaseSet2 extends
      akka.protobuf.GeneratedMessage
      implements TwoPhaseSet2OrBuilder {
    // Use TwoPhaseSet2.newBuilder() to construct.
    private TwoPhaseSet2(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TwoPhaseSet2(boolean noInit) { this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TwoPhaseSet2 defaultInstance;
    public static TwoPhaseSet2 getDefaultInstance() {
      return defaultInstance;
    }

    public TwoPhaseSet2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TwoPhaseSet2(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              adds_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              removals_ = input.readBytes();
              break;
            }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final akka.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet2_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.class, docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.Builder.class);
    }

    public static akka.protobuf.Parser<TwoPhaseSet2> PARSER =
        new akka.protobuf.AbstractParser<TwoPhaseSet2>() {
      public TwoPhaseSet2 parsePartialFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws akka.protobuf.InvalidProtocolBufferException {
        return new TwoPhaseSet2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public akka.protobuf.Parser<TwoPhaseSet2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes adds = 1;
    public static final int ADDS_FIELD_NUMBER = 1;
    private akka.protobuf.ByteString adds_;
    /**
     * <code>optional bytes adds = 1;</code>
     */
    public boolean hasAdds() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes adds = 1;</code>
     */
    public akka.protobuf.ByteString getAdds() {
      return adds_;
    }

    // optional bytes removals = 2;
    public static final int REMOVALS_FIELD_NUMBER = 2;
    private akka.protobuf.ByteString removals_;
    /**
     * <code>optional bytes removals = 2;</code>
     */
    public boolean hasRemovals() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes removals = 2;</code>
     */
    public akka.protobuf.ByteString getRemovals() {
      return removals_;
    }

    private void initFields() {
      adds_ = akka.protobuf.ByteString.EMPTY;
      removals_ = akka.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, adds_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, removals_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream
          .computeBytesSize(1, adds_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream
          .computeBytesSize(2, removals_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(
        akka.protobuf.ByteString data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(
        akka.protobuf.ByteString data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(byte[] data)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(
        byte[] data,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseDelimitedFrom(
        java.io.InputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(
        akka.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parseFrom(
        akka.protobuf.CodedInputStream input,
        akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code docs.ddata.TwoPhaseSet2}
     *
     * <pre>
     *#twophaseset2
     * </pre>
     */
    public static final class Builder extends
        akka.protobuf.GeneratedMessage.Builder<Builder>
       implements docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2OrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet2_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.class, docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.Builder.class);
      }

      // Construct using docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        adds_ = akka.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        removals_ = akka.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.internal_static_docs_ddata_TwoPhaseSet2_descriptor;
      }

      public docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 getDefaultInstanceForType() {
        return docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.getDefaultInstance();
      }

      public docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 build() {
        docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 buildPartial() {
        docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 result = new docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.adds_ = adds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.removals_ = removals_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other instanceof docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2) {
          return mergeFrom((docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 other) {
        if (other == docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2.getDefaultInstance()) return this;
        if (other.hasAdds()) {
          setAdds(other.getAdds());
        }
        if (other.hasRemovals()) {
          setRemovals(other.getRemovals());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (docs.ddata.protobuf.msg.TwoPhaseSetMessages.TwoPhaseSet2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes adds = 1;
      private akka.protobuf.ByteString adds_ = akka.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes adds = 1;</code>
       */
      public boolean hasAdds() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes adds = 1;</code>
       */
      public akka.protobuf.ByteString getAdds() {
        return adds_;
      }
      /**
       * <code>optional bytes adds = 1;</code>
       */
      public Builder setAdds(akka.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        adds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes adds = 1;</code>
       */
      public Builder clearAdds() {
        bitField0_ = (bitField0_ & ~0x00000001);
        adds_ = getDefaultInstance().getAdds();
        onChanged();
        return this;
      }

      // optional bytes removals = 2;
      private akka.protobuf.ByteString removals_ = akka.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes removals = 2;</code>
       */
      public boolean hasRemovals() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes removals = 2;</code>
       */
      public akka.protobuf.ByteString getRemovals() {
        return removals_;
      }
      /**
       * <code>optional bytes removals = 2;</code>
       */
      public Builder setRemovals(akka.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        removals_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes removals = 2;</code>
       */
      public Builder clearRemovals() {
        bitField0_ = (bitField0_ & ~0x00000002);
        removals_ = getDefaultInstance().getRemovals();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:docs.ddata.TwoPhaseSet2)
    }

    static {
      defaultInstance = new TwoPhaseSet2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:docs.ddata.TwoPhaseSet2)
  }

  private static akka.protobuf.Descriptors.Descriptor
    internal_static_docs_ddata_TwoPhaseSet_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_docs_ddata_TwoPhaseSet_fieldAccessorTable;
  private static akka.protobuf.Descriptors.Descriptor
    internal_static_docs_ddata_TwoPhaseSet2_descriptor;
  private static
    akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_docs_ddata_TwoPhaseSet2_fieldAccessorTable;

  public static akka.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static akka.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031TwoPhaseSetMessages.proto\022\ndocs.ddata\"" +
      "-\n\013TwoPhaseSet\022\014\n\004adds\030\001 \003(\t\022\020\n\010removals" +
      "\030\002 \003(\t\".\n\014TwoPhaseSet2\022\014\n\004adds\030\001 \001(\014\022\020\n\010" +
      "removals\030\002 \001(\014B\033\n\027docs.ddata.protobuf.ms" +
      "gH\001"
    };
    akka.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new akka.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public akka.protobuf.ExtensionRegistry assignDescriptors(
            akka.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_docs_ddata_TwoPhaseSet_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_docs_ddata_TwoPhaseSet_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_docs_ddata_TwoPhaseSet_descriptor,
              new java.lang.String[] { "Adds", "Removals", });
          internal_static_docs_ddata_TwoPhaseSet2_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_docs_ddata_TwoPhaseSet2_fieldAccessorTable = new
            akka.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_docs_ddata_TwoPhaseSet2_descriptor,
              new java.lang.String[] { "Adds", "Removals", });
          return null;
        }
      };
    akka.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new akka.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
