# This file contains all excludes added before changing to the subdirectory style
# Remove ActorPublisher/Subscriber

ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.LiveEventsByTagPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.AbstractEventsByPersistenceIdPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.CurrentEventsByTagPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.EventsByTagPublisher$Continue$")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.AllPersistenceIdsPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.AllPersistenceIdsPublisher$Continue$")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.EventsByPersistenceIdPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.DeliveryBuffer")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.LiveEventsByPersistenceIdPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.EventsByPersistenceIdPublisher$")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.CurrentEventsByPersistenceIdPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.AllPersistenceIdsPublisher$")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.EventsByTagPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.EventsByTagPublisher$")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.AbstractEventsByTagPublisher")
ProblemFilters.exclude[MissingClassProblem]("akka.persistence.query.journal.leveldb.EventsByPersistenceIdPublisher$Continue$")

